%
% Crossword problem 'puzzle16, 13 x 13' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 65 1` ).
%
% This crossword model was 
%
% This is problem 'puzzle16, 13 x 13' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (65): puzzle16, 13 x 13
% 
%   _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ * _ _ _ * * *
%   * * * _ _ _ * _ _ _ _ _ _
%   _ _ _ _ _ * _ _ _ * _ _ _
%   _ _ _ _ * _ _ _ * _ _ _ _
%   _ _ _ * _ _ _ * _ _ _ _ _
%   _ _ _ _ _ _ * _ _ _ * * *
%   * * * _ _ _ * _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _

include "crossword3.mzn"; 

problem_name = "puzzle16, 13 x 13";


% number of letters to assign
N = 135;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3]], words3) 
/\ table([L[4], L[5], L[6], L[7]], words4) 
/\ table([L[8], L[9], L[10], L[11]], words4) 
/\ table([L[12], L[13], L[14]], words3) 
/\ table([L[15], L[16], L[17], L[18]], words4) 
/\ table([L[19], L[20], L[21], L[22]], words4) 
/\ table([L[23], L[24], L[25]], words3) 
/\ table([L[26], L[27], L[28], L[29]], words4) 
/\ table([L[30], L[31], L[32], L[33]], words4) 
/\ table([L[34], L[35], L[36], L[37], L[38], L[39]], words6) 
/\ table([L[40], L[41], L[42]], words3) 
/\ table([L[43], L[44], L[45]], words3) 
/\ table([L[46], L[47], L[48], L[49], L[50], L[51]], words6) 
/\ table([L[52], L[53], L[54], L[55], L[56]], words5) 
/\ table([L[57], L[58], L[59]], words3) 
/\ table([L[60], L[61], L[62]], words3) 
/\ table([L[63], L[64], L[65], L[66]], words4) 
/\ table([L[67], L[68], L[69]], words3) 
/\ table([L[70], L[71], L[72], L[73]], words4) 
/\ table([L[74], L[75], L[76]], words3) 
/\ table([L[77], L[78], L[79]], words3) 
/\ table([L[80], L[81], L[82], L[83], L[84]], words5) 
/\ table([L[85], L[86], L[87], L[88], L[89], L[90]], words6) 
/\ table([L[91], L[92], L[93]], words3) 
/\ table([L[94], L[95], L[96]], words3) 
/\ table([L[97], L[98], L[99], L[100], L[101], L[102]], words6) 
/\ table([L[103], L[104], L[105], L[106]], words4) 
/\ table([L[107], L[108], L[109], L[110]], words4) 
/\ table([L[111], L[112], L[113]], words3) 
/\ table([L[114], L[115], L[116], L[117]], words4) 
/\ table([L[118], L[119], L[120], L[121]], words4) 
/\ table([L[122], L[123], L[124]], words3) 
/\ table([L[125], L[126], L[127], L[128]], words4) 
/\ table([L[129], L[130], L[131], L[132]], words4) 
/\ table([L[133], L[134], L[135]], words3) 
/\ table([L[1], L[12], L[23], L[34]], words4) 
/\ table([L[52], L[63], L[74], L[85]], words4) 
/\ table([L[103], L[114], L[125]], words3) 
/\ table([L[2], L[13], L[24], L[35]], words4) 
/\ table([L[53], L[64], L[75], L[86]], words4) 
/\ table([L[104], L[115], L[126]], words3) 
/\ table([L[3], L[14], L[25], L[36]], words4) 
/\ table([L[54], L[65], L[76], L[87]], words4) 
/\ table([L[105], L[116], L[127]], words3) 
/\ table([L[37], L[43], L[55], L[66]], words4) 
/\ table([L[88], L[94], L[106], L[117], L[128]], words5) 
/\ table([L[4], L[15], L[26], L[38], L[44], L[56]], words6) 
/\ table([L[77], L[89], L[95]], words3) 
/\ table([L[5], L[16], L[27], L[39], L[45]], words5) 
/\ table([L[67], L[78], L[90], L[96], L[107], L[118], L[129]], words7) 
/\ table([L[6], L[17], L[28]], words3) 
/\ table([L[57], L[68], L[79]], words3) 
/\ table([L[108], L[119], L[130]], words3) 
/\ table([L[7], L[18], L[29], L[40], L[46], L[58], L[69]], words7) 
/\ table([L[91], L[97], L[109], L[120], L[131]], words5) 
/\ table([L[41], L[47], L[59]], words3) 
/\ table([L[80], L[92], L[98], L[110], L[121], L[132]], words6) 
/\ table([L[8], L[19], L[30], L[42], L[48]], words5) 
/\ table([L[70], L[81], L[93], L[99]], words4) 
/\ table([L[9], L[20], L[31]], words3) 
/\ table([L[49], L[60], L[71], L[82]], words4) 
/\ table([L[100], L[111], L[122], L[133]], words4) 
/\ table([L[10], L[21], L[32]], words3) 
/\ table([L[50], L[61], L[72], L[83]], words4) 
/\ table([L[101], L[112], L[123], L[134]], words4) 
/\ table([L[11], L[22], L[33]], words3) 
/\ table([L[51], L[62], L[73], L[84]], words4) 
/\ table([L[102], L[113], L[124], L[135]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 13;
int: num_segments = 68;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,0,0,0,0,0,0,0,0,0,0,
4,5,6,7,0,0,0,0,0,0,0,0,0,
8,9,10,11,0,0,0,0,0,0,0,0,0,
12,13,14,0,0,0,0,0,0,0,0,0,0,
15,16,17,18,0,0,0,0,0,0,0,0,0,
19,20,21,22,0,0,0,0,0,0,0,0,0,
23,24,25,0,0,0,0,0,0,0,0,0,0,
26,27,28,29,0,0,0,0,0,0,0,0,0,
30,31,32,33,0,0,0,0,0,0,0,0,0,
34,35,36,37,38,39,0,0,0,0,0,0,0,
40,41,42,0,0,0,0,0,0,0,0,0,0,
43,44,45,0,0,0,0,0,0,0,0,0,0,
46,47,48,49,50,51,0,0,0,0,0,0,0,
52,53,54,55,56,0,0,0,0,0,0,0,0,
57,58,59,0,0,0,0,0,0,0,0,0,0,
60,61,62,0,0,0,0,0,0,0,0,0,0,
63,64,65,66,0,0,0,0,0,0,0,0,0,
67,68,69,0,0,0,0,0,0,0,0,0,0,
70,71,72,73,0,0,0,0,0,0,0,0,0,
74,75,76,0,0,0,0,0,0,0,0,0,0,
77,78,79,0,0,0,0,0,0,0,0,0,0,
80,81,82,83,84,0,0,0,0,0,0,0,0,
85,86,87,88,89,90,0,0,0,0,0,0,0,
91,92,93,0,0,0,0,0,0,0,0,0,0,
94,95,96,0,0,0,0,0,0,0,0,0,0,
97,98,99,100,101,102,0,0,0,0,0,0,0,
103,104,105,106,0,0,0,0,0,0,0,0,0,
107,108,109,110,0,0,0,0,0,0,0,0,0,
111,112,113,0,0,0,0,0,0,0,0,0,0,
114,115,116,117,0,0,0,0,0,0,0,0,0,
118,119,120,121,0,0,0,0,0,0,0,0,0,
122,123,124,0,0,0,0,0,0,0,0,0,0,
125,126,127,128,0,0,0,0,0,0,0,0,0,
129,130,131,132,0,0,0,0,0,0,0,0,0,
133,134,135,0,0,0,0,0,0,0,0,0,0,
1,12,23,34,0,0,0,0,0,0,0,0,0,
52,63,74,85,0,0,0,0,0,0,0,0,0,
103,114,125,0,0,0,0,0,0,0,0,0,0,
2,13,24,35,0,0,0,0,0,0,0,0,0,
53,64,75,86,0,0,0,0,0,0,0,0,0,
104,115,126,0,0,0,0,0,0,0,0,0,0,
3,14,25,36,0,0,0,0,0,0,0,0,0,
54,65,76,87,0,0,0,0,0,0,0,0,0,
105,116,127,0,0,0,0,0,0,0,0,0,0,
37,43,55,66,0,0,0,0,0,0,0,0,0,
88,94,106,117,128,0,0,0,0,0,0,0,0,
4,15,26,38,44,56,0,0,0,0,0,0,0,
77,89,95,0,0,0,0,0,0,0,0,0,0,
5,16,27,39,45,0,0,0,0,0,0,0,0,
67,78,90,96,107,118,129,0,0,0,0,0,0,
6,17,28,0,0,0,0,0,0,0,0,0,0,
57,68,79,0,0,0,0,0,0,0,0,0,0,
108,119,130,0,0,0,0,0,0,0,0,0,0,
7,18,29,40,46,58,69,0,0,0,0,0,0,
91,97,109,120,131,0,0,0,0,0,0,0,0,
41,47,59,0,0,0,0,0,0,0,0,0,0,
80,92,98,110,121,132,0,0,0,0,0,0,0,
8,19,30,42,48,0,0,0,0,0,0,0,0,
70,81,93,99,0,0,0,0,0,0,0,0,0,
9,20,31,0,0,0,0,0,0,0,0,0,0,
49,60,71,82,0,0,0,0,0,0,0,0,0,
100,111,122,133,0,0,0,0,0,0,0,0,0,
10,21,32,0,0,0,0,0,0,0,0,0,0,
50,61,72,83,0,0,0,0,0,0,0,0,0,
101,112,123,134,0,0,0,0,0,0,0,0,0,
11,22,33,0,0,0,0,0,0,0,0,0,0,
51,62,73,84,0,0,0,0,0,0,0,0,0,
102,113,124,135,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 13;
int: cols = 13;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 0, 4, 5, 6, 7, 0, 8, 9, 10, 11, 
12, 13, 14, 0, 15, 16, 17, 18, 0, 19, 20, 21, 22, 
23, 24, 25, 0, 26, 27, 28, 29, 0, 30, 31, 32, 33, 
34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 0, 0, 0, 
0, 0, 0, 43, 44, 45, 0, 46, 47, 48, 49, 50, 51, 
52, 53, 54, 55, 56, 0, 57, 58, 59, 0, 60, 61, 62, 
63, 64, 65, 66, 0, 67, 68, 69, 0, 70, 71, 72, 73, 
74, 75, 76, 0, 77, 78, 79, 0, 80, 81, 82, 83, 84, 
85, 86, 87, 88, 89, 90, 0, 91, 92, 93, 0, 0, 0, 
0, 0, 0, 94, 95, 96, 0, 97, 98, 99, 100, 101, 102, 
103, 104, 105, 106, 0, 107, 108, 109, 110, 0, 111, 112, 113, 
114, 115, 116, 117, 0, 118, 119, 120, 121, 0, 122, 123, 124, 
125, 126, 127, 128, 0, 129, 130, 131, 132, 0, 133, 134, 135, 

]);


