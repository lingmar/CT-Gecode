%
% Crossword problem 'puzzle15, 11 x 11' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 64 1` ).
%
% This crossword model was 
%
% This is problem 'puzzle15, 11 x 11' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (64): puzzle15, 11 x 11
% 
%   _ _ _ _ * * * _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _
%   _ _ _ * _ _ _ * _ _ _
%   * _ _ _ _ _ * _ _ _ *
%   * * * _ _ _ _ _ * * *
%   * _ _ _ * _ _ _ _ _ *
%   _ _ _ * _ _ _ * _ _ _
%   _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ * * * _ _ _ _

include "crossword3.mzn"; 

problem_name = "puzzle15, 11 x 11";


% number of letters to assign
N = 95;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4]], words4) 
/\ table([L[5], L[6], L[7], L[8]], words4) 
/\ table([L[9], L[10], L[11], L[12], L[13]], words5) 
/\ table([L[14], L[15], L[16], L[17], L[18]], words5) 
/\ table([L[19], L[20], L[21], L[22], L[23]], words5) 
/\ table([L[24], L[25], L[26], L[27], L[28]], words5) 
/\ table([L[29], L[30], L[31]], words3) 
/\ table([L[32], L[33], L[34]], words3) 
/\ table([L[35], L[36], L[37]], words3) 
/\ table([L[38], L[39], L[40], L[41], L[42]], words5) 
/\ table([L[43], L[44], L[45]], words3) 
/\ table([L[46], L[47], L[48], L[49], L[50]], words5) 
/\ table([L[51], L[52], L[53]], words3) 
/\ table([L[54], L[55], L[56], L[57], L[58]], words5) 
/\ table([L[59], L[60], L[61]], words3) 
/\ table([L[62], L[63], L[64]], words3) 
/\ table([L[65], L[66], L[67]], words3) 
/\ table([L[68], L[69], L[70], L[71], L[72]], words5) 
/\ table([L[73], L[74], L[75], L[76], L[77]], words5) 
/\ table([L[78], L[79], L[80], L[81], L[82]], words5) 
/\ table([L[83], L[84], L[85], L[86], L[87]], words5) 
/\ table([L[88], L[89], L[90], L[91]], words4) 
/\ table([L[92], L[93], L[94], L[95]], words4) 
/\ table([L[1], L[9], L[19], L[29]], words4) 
/\ table([L[59], L[68], L[78], L[88]], words4) 
/\ table([L[2], L[10], L[20], L[30], L[38]], words5) 
/\ table([L[51], L[60], L[69], L[79], L[89]], words5) 
/\ table([L[3], L[11], L[21], L[31], L[39]], words5) 
/\ table([L[52], L[61], L[70], L[80], L[90]], words5) 
/\ table([L[4], L[12], L[22]], words3) 
/\ table([L[40], L[46], L[53]], words3) 
/\ table([L[71], L[81], L[91]], words3) 
/\ table([L[13], L[23], L[32], L[41], L[47]], words5) 
/\ table([L[62], L[72], L[82]], words3) 
/\ table([L[33], L[42], L[48], L[54], L[63]], words5) 
/\ table([L[14], L[24], L[34]], words3) 
/\ table([L[49], L[55], L[64], L[73], L[83]], words5) 
/\ table([L[5], L[15], L[25]], words3) 
/\ table([L[43], L[50], L[56]], words3) 
/\ table([L[74], L[84], L[92]], words3) 
/\ table([L[6], L[16], L[26], L[35], L[44]], words5) 
/\ table([L[57], L[65], L[75], L[85], L[93]], words5) 
/\ table([L[7], L[17], L[27], L[36], L[45]], words5) 
/\ table([L[58], L[66], L[76], L[86], L[94]], words5) 
/\ table([L[8], L[18], L[28], L[37]], words4) 
/\ table([L[67], L[77], L[87], L[95]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 11;
int: num_segments = 46;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,0,0,0,0,0,0,0,
5,6,7,8,0,0,0,0,0,0,0,
9,10,11,12,13,0,0,0,0,0,0,
14,15,16,17,18,0,0,0,0,0,0,
19,20,21,22,23,0,0,0,0,0,0,
24,25,26,27,28,0,0,0,0,0,0,
29,30,31,0,0,0,0,0,0,0,0,
32,33,34,0,0,0,0,0,0,0,0,
35,36,37,0,0,0,0,0,0,0,0,
38,39,40,41,42,0,0,0,0,0,0,
43,44,45,0,0,0,0,0,0,0,0,
46,47,48,49,50,0,0,0,0,0,0,
51,52,53,0,0,0,0,0,0,0,0,
54,55,56,57,58,0,0,0,0,0,0,
59,60,61,0,0,0,0,0,0,0,0,
62,63,64,0,0,0,0,0,0,0,0,
65,66,67,0,0,0,0,0,0,0,0,
68,69,70,71,72,0,0,0,0,0,0,
73,74,75,76,77,0,0,0,0,0,0,
78,79,80,81,82,0,0,0,0,0,0,
83,84,85,86,87,0,0,0,0,0,0,
88,89,90,91,0,0,0,0,0,0,0,
92,93,94,95,0,0,0,0,0,0,0,
1,9,19,29,0,0,0,0,0,0,0,
59,68,78,88,0,0,0,0,0,0,0,
2,10,20,30,38,0,0,0,0,0,0,
51,60,69,79,89,0,0,0,0,0,0,
3,11,21,31,39,0,0,0,0,0,0,
52,61,70,80,90,0,0,0,0,0,0,
4,12,22,0,0,0,0,0,0,0,0,
40,46,53,0,0,0,0,0,0,0,0,
71,81,91,0,0,0,0,0,0,0,0,
13,23,32,41,47,0,0,0,0,0,0,
62,72,82,0,0,0,0,0,0,0,0,
33,42,48,54,63,0,0,0,0,0,0,
14,24,34,0,0,0,0,0,0,0,0,
49,55,64,73,83,0,0,0,0,0,0,
5,15,25,0,0,0,0,0,0,0,0,
43,50,56,0,0,0,0,0,0,0,0,
74,84,92,0,0,0,0,0,0,0,0,
6,16,26,35,44,0,0,0,0,0,0,
57,65,75,85,93,0,0,0,0,0,0,
7,17,27,36,45,0,0,0,0,0,0,
58,66,76,86,94,0,0,0,0,0,0,
8,18,28,37,0,0,0,0,0,0,0,
67,77,87,95,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 11;
int: cols = 11;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 0, 0, 0, 5, 6, 7, 8, 
9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 
19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 
29, 30, 31, 0, 32, 33, 34, 0, 35, 36, 37, 
0, 38, 39, 40, 41, 42, 0, 43, 44, 45, 0, 
0, 0, 0, 46, 47, 48, 49, 50, 0, 0, 0, 
0, 51, 52, 53, 0, 54, 55, 56, 57, 58, 0, 
59, 60, 61, 0, 62, 63, 64, 0, 65, 66, 67, 
68, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 
78, 79, 80, 81, 82, 0, 83, 84, 85, 86, 87, 
88, 89, 90, 91, 0, 0, 0, 92, 93, 94, 95, 

]);


