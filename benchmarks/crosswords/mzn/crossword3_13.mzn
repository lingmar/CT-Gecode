%
% Crossword problem '15.04, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 13 1` ).
%
% This crossword model was 
%
% This is problem '15.04, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (13): 15.04, 15 x 15
% 
%   _ _ _ * _ _ _ _ * _ _ _ _ _ _
%   _ _ _ _ _ _ _ _ * _ _ _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _ * _ _ _
%   * * * _ _ _ * _ _ _ _ _ * * *
%   _ _ _ * _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ * _ _ _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ _ _ * _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _ * _ _ _
%   * * * _ _ _ _ _ * _ _ _ * * *
%   _ _ _ * _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ _ _ * _ _ _ _ _ _ _ _
%   _ _ _ _ _ _ * _ _ _ _ * _ _ _

include "crossword3.mzn"; 

problem_name = "15.04, 15 x 15";


% number of letters to assign
N = 193;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3]], words3) 
/\ table([L[4], L[5], L[6], L[7]], words4) 
/\ table([L[8], L[9], L[10], L[11], L[12], L[13]], words6) 
/\ table([L[14], L[15], L[16], L[17], L[18], L[19], L[20], L[21]], words8) 
/\ table([L[22], L[23], L[24], L[25], L[26], L[27]], words6) 
/\ table([L[28], L[29], L[30], L[31], L[32], L[33], L[34], L[35], L[36], L[37], L[38], L[39], L[40], L[41], L[42]], words15) 
/\ table([L[43], L[44], L[45], L[46], L[47]], words5) 
/\ table([L[48], L[49], L[50], L[51], L[52]], words5) 
/\ table([L[53], L[54], L[55]], words3) 
/\ table([L[56], L[57], L[58]], words3) 
/\ table([L[59], L[60], L[61], L[62], L[63]], words5) 
/\ table([L[64], L[65], L[66]], words3) 
/\ table([L[67], L[68], L[69], L[70], L[71]], words5) 
/\ table([L[72], L[73], L[74], L[75], L[76]], words5) 
/\ table([L[77], L[78], L[79], L[80]], words4) 
/\ table([L[81], L[82], L[83]], words3) 
/\ table([L[84], L[85], L[86], L[87], L[88], L[89]], words6) 
/\ table([L[90], L[91], L[92], L[93], L[94], L[95], L[96], L[97], L[98], L[99], L[100], L[101], L[102], L[103], L[104]], words15) 
/\ table([L[105], L[106], L[107], L[108], L[109], L[110]], words6) 
/\ table([L[111], L[112], L[113]], words3) 
/\ table([L[114], L[115], L[116], L[117]], words4) 
/\ table([L[118], L[119], L[120], L[121], L[122]], words5) 
/\ table([L[123], L[124], L[125], L[126], L[127]], words5) 
/\ table([L[128], L[129], L[130]], words3) 
/\ table([L[131], L[132], L[133], L[134], L[135]], words5) 
/\ table([L[136], L[137], L[138]], words3) 
/\ table([L[139], L[140], L[141]], words3) 
/\ table([L[142], L[143], L[144], L[145], L[146]], words5) 
/\ table([L[147], L[148], L[149], L[150], L[151]], words5) 
/\ table([L[152], L[153], L[154], L[155], L[156], L[157], L[158], L[159], L[160], L[161], L[162], L[163], L[164], L[165], L[166]], words15) 
/\ table([L[167], L[168], L[169], L[170], L[171], L[172]], words6) 
/\ table([L[173], L[174], L[175], L[176], L[177], L[178], L[179], L[180]], words8) 
/\ table([L[181], L[182], L[183], L[184], L[185], L[186]], words6) 
/\ table([L[187], L[188], L[189], L[190]], words4) 
/\ table([L[191], L[192], L[193]], words3) 
/\ table([L[1], L[14], L[28], L[43]], words4) 
/\ table([L[64], L[77], L[90], L[105], L[118]], words5) 
/\ table([L[139], L[152], L[167], L[181]], words4) 
/\ table([L[2], L[15], L[29], L[44]], words4) 
/\ table([L[65], L[78], L[91], L[106], L[119]], words5) 
/\ table([L[140], L[153], L[168], L[182]], words4) 
/\ table([L[3], L[16], L[30], L[45]], words4) 
/\ table([L[66], L[79], L[92], L[107], L[120]], words5) 
/\ table([L[141], L[154], L[169], L[183]], words4) 
/\ table([L[17], L[31], L[46], L[56]], words4) 
/\ table([L[80], L[93], L[108], L[121], L[131]], words5) 
/\ table([L[155], L[170], L[184]], words3) 
/\ table([L[4], L[18], L[32], L[47], L[57], L[67]], words6) 
/\ table([L[94], L[109], L[122], L[132], L[142], L[156], L[171], L[185]], words8) 
/\ table([L[5], L[19], L[33]], words3) 
/\ table([L[58], L[68], L[81], L[95], L[110]], words5) 
/\ table([L[133], L[143], L[157], L[172], L[186]], words5) 
/\ table([L[6], L[20], L[34], L[48]], words4) 
/\ table([L[69], L[82], L[96]], words3) 
/\ table([L[123], L[134], L[144], L[158]], words4) 
/\ table([L[7], L[21], L[35], L[49], L[59], L[70], L[83], L[97], L[111], L[124], L[135], L[145], L[159], L[173], L[187]], words15) 
/\ table([L[36], L[50], L[60], L[71]], words4) 
/\ table([L[98], L[112], L[125]], words3) 
/\ table([L[146], L[160], L[174], L[188]], words4) 
/\ table([L[8], L[22], L[37], L[51], L[61]], words5) 
/\ table([L[84], L[99], L[113], L[126], L[136]], words5) 
/\ table([L[161], L[175], L[189]], words3) 
/\ table([L[9], L[23], L[38], L[52], L[62], L[72], L[85], L[100]], words8) 
/\ table([L[127], L[137], L[147], L[162], L[176], L[190]], words6) 
/\ table([L[10], L[24], L[39]], words3) 
/\ table([L[63], L[73], L[86], L[101], L[114]], words5) 
/\ table([L[138], L[148], L[163], L[177]], words4) 
/\ table([L[11], L[25], L[40], L[53]], words4) 
/\ table([L[74], L[87], L[102], L[115], L[128]], words5) 
/\ table([L[149], L[164], L[178], L[191]], words4) 
/\ table([L[12], L[26], L[41], L[54]], words4) 
/\ table([L[75], L[88], L[103], L[116], L[129]], words5) 
/\ table([L[150], L[165], L[179], L[192]], words4) 
/\ table([L[13], L[27], L[42], L[55]], words4) 
/\ table([L[76], L[89], L[104], L[117], L[130]], words5) 
/\ table([L[151], L[166], L[180], L[193]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 76;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,
4,5,6,7,0,0,0,0,0,0,0,0,0,0,0,
8,9,10,11,12,13,0,0,0,0,0,0,0,0,0,
14,15,16,17,18,19,20,21,0,0,0,0,0,0,0,
22,23,24,25,26,27,0,0,0,0,0,0,0,0,0,
28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,
43,44,45,46,47,0,0,0,0,0,0,0,0,0,0,
48,49,50,51,52,0,0,0,0,0,0,0,0,0,0,
53,54,55,0,0,0,0,0,0,0,0,0,0,0,0,
56,57,58,0,0,0,0,0,0,0,0,0,0,0,0,
59,60,61,62,63,0,0,0,0,0,0,0,0,0,0,
64,65,66,0,0,0,0,0,0,0,0,0,0,0,0,
67,68,69,70,71,0,0,0,0,0,0,0,0,0,0,
72,73,74,75,76,0,0,0,0,0,0,0,0,0,0,
77,78,79,80,0,0,0,0,0,0,0,0,0,0,0,
81,82,83,0,0,0,0,0,0,0,0,0,0,0,0,
84,85,86,87,88,89,0,0,0,0,0,0,0,0,0,
90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,
105,106,107,108,109,110,0,0,0,0,0,0,0,0,0,
111,112,113,0,0,0,0,0,0,0,0,0,0,0,0,
114,115,116,117,0,0,0,0,0,0,0,0,0,0,0,
118,119,120,121,122,0,0,0,0,0,0,0,0,0,0,
123,124,125,126,127,0,0,0,0,0,0,0,0,0,0,
128,129,130,0,0,0,0,0,0,0,0,0,0,0,0,
131,132,133,134,135,0,0,0,0,0,0,0,0,0,0,
136,137,138,0,0,0,0,0,0,0,0,0,0,0,0,
139,140,141,0,0,0,0,0,0,0,0,0,0,0,0,
142,143,144,145,146,0,0,0,0,0,0,0,0,0,0,
147,148,149,150,151,0,0,0,0,0,0,0,0,0,0,
152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,
167,168,169,170,171,172,0,0,0,0,0,0,0,0,0,
173,174,175,176,177,178,179,180,0,0,0,0,0,0,0,
181,182,183,184,185,186,0,0,0,0,0,0,0,0,0,
187,188,189,190,0,0,0,0,0,0,0,0,0,0,0,
191,192,193,0,0,0,0,0,0,0,0,0,0,0,0,
1,14,28,43,0,0,0,0,0,0,0,0,0,0,0,
64,77,90,105,118,0,0,0,0,0,0,0,0,0,0,
139,152,167,181,0,0,0,0,0,0,0,0,0,0,0,
2,15,29,44,0,0,0,0,0,0,0,0,0,0,0,
65,78,91,106,119,0,0,0,0,0,0,0,0,0,0,
140,153,168,182,0,0,0,0,0,0,0,0,0,0,0,
3,16,30,45,0,0,0,0,0,0,0,0,0,0,0,
66,79,92,107,120,0,0,0,0,0,0,0,0,0,0,
141,154,169,183,0,0,0,0,0,0,0,0,0,0,0,
17,31,46,56,0,0,0,0,0,0,0,0,0,0,0,
80,93,108,121,131,0,0,0,0,0,0,0,0,0,0,
155,170,184,0,0,0,0,0,0,0,0,0,0,0,0,
4,18,32,47,57,67,0,0,0,0,0,0,0,0,0,
94,109,122,132,142,156,171,185,0,0,0,0,0,0,0,
5,19,33,0,0,0,0,0,0,0,0,0,0,0,0,
58,68,81,95,110,0,0,0,0,0,0,0,0,0,0,
133,143,157,172,186,0,0,0,0,0,0,0,0,0,0,
6,20,34,48,0,0,0,0,0,0,0,0,0,0,0,
69,82,96,0,0,0,0,0,0,0,0,0,0,0,0,
123,134,144,158,0,0,0,0,0,0,0,0,0,0,0,
7,21,35,49,59,70,83,97,111,124,135,145,159,173,187,
36,50,60,71,0,0,0,0,0,0,0,0,0,0,0,
98,112,125,0,0,0,0,0,0,0,0,0,0,0,0,
146,160,174,188,0,0,0,0,0,0,0,0,0,0,0,
8,22,37,51,61,0,0,0,0,0,0,0,0,0,0,
84,99,113,126,136,0,0,0,0,0,0,0,0,0,0,
161,175,189,0,0,0,0,0,0,0,0,0,0,0,0,
9,23,38,52,62,72,85,100,0,0,0,0,0,0,0,
127,137,147,162,176,190,0,0,0,0,0,0,0,0,0,
10,24,39,0,0,0,0,0,0,0,0,0,0,0,0,
63,73,86,101,114,0,0,0,0,0,0,0,0,0,0,
138,148,163,177,0,0,0,0,0,0,0,0,0,0,0,
11,25,40,53,0,0,0,0,0,0,0,0,0,0,0,
74,87,102,115,128,0,0,0,0,0,0,0,0,0,0,
149,164,178,191,0,0,0,0,0,0,0,0,0,0,0,
12,26,41,54,0,0,0,0,0,0,0,0,0,0,0,
75,88,103,116,129,0,0,0,0,0,0,0,0,0,0,
150,165,179,192,0,0,0,0,0,0,0,0,0,0,0,
13,27,42,55,0,0,0,0,0,0,0,0,0,0,0,
76,89,104,117,130,0,0,0,0,0,0,0,0,0,0,
151,166,180,193,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 0, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 
14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 23, 24, 25, 26, 27, 
28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
43, 44, 45, 46, 47, 0, 48, 49, 50, 51, 52, 0, 53, 54, 55, 
0, 0, 0, 56, 57, 58, 0, 59, 60, 61, 62, 63, 0, 0, 0, 
64, 65, 66, 0, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75, 76, 
77, 78, 79, 80, 0, 81, 82, 83, 0, 84, 85, 86, 87, 88, 89, 
90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
105, 106, 107, 108, 109, 110, 0, 111, 112, 113, 0, 114, 115, 116, 117, 
118, 119, 120, 121, 122, 0, 123, 124, 125, 126, 127, 0, 128, 129, 130, 
0, 0, 0, 131, 132, 133, 134, 135, 0, 136, 137, 138, 0, 0, 0, 
139, 140, 141, 0, 142, 143, 144, 145, 146, 0, 147, 148, 149, 150, 151, 
152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
167, 168, 169, 170, 171, 172, 0, 173, 174, 175, 176, 177, 178, 179, 180, 
181, 182, 183, 184, 185, 186, 0, 187, 188, 189, 190, 0, 191, 192, 193, 

]);


