%
% Crossword problem '15.03, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 12 1` ).
%
% This crossword model was 
%
% This is problem '15.03, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (12): 15.03, 15 x 15
% 
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ _ * _ _ _ _ _ _
%   * * * _ _ _ _ * _ _ _ _ * * *
%   _ _ _ _ _ _ * _ _ _ _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _ * _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ * _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ _ _ _ * _ _ _ _ _ _
%   * * * _ _ _ _ * _ _ _ _ * * *
%   _ _ _ _ _ _ * _ _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _

include "crossword3.mzn"; 

problem_name = "15.03, 15 x 15";


% number of letters to assign
N = 189;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4]], words4) 
/\ table([L[5], L[6], L[7], L[8], L[9]], words5) 
/\ table([L[10], L[11], L[12], L[13]], words4) 
/\ table([L[14], L[15], L[16], L[17]], words4) 
/\ table([L[18], L[19], L[20], L[21], L[22]], words5) 
/\ table([L[23], L[24], L[25], L[26]], words4) 
/\ table([L[27], L[28], L[29], L[30]], words4) 
/\ table([L[31], L[32], L[33], L[34], L[35]], words5) 
/\ table([L[36], L[37], L[38], L[39]], words4) 
/\ table([L[40], L[41], L[42], L[43], L[44], L[45], L[46], L[47]], words8) 
/\ table([L[48], L[49], L[50], L[51], L[52], L[53]], words6) 
/\ table([L[54], L[55], L[56], L[57]], words4) 
/\ table([L[58], L[59], L[60], L[61]], words4) 
/\ table([L[62], L[63], L[64], L[65], L[66], L[67]], words6) 
/\ table([L[68], L[69], L[70], L[71], L[72], L[73], L[74], L[75]], words8) 
/\ table([L[76], L[77], L[78], L[79], L[80]], words5) 
/\ table([L[81], L[82], L[83], L[84], L[85]], words5) 
/\ table([L[86], L[87], L[88]], words3) 
/\ table([L[89], L[90], L[91], L[92]], words4) 
/\ table([L[93], L[94], L[95], L[96], L[97]], words5) 
/\ table([L[98], L[99], L[100], L[101]], words4) 
/\ table([L[102], L[103], L[104]], words3) 
/\ table([L[105], L[106], L[107], L[108], L[109]], words5) 
/\ table([L[110], L[111], L[112], L[113], L[114]], words5) 
/\ table([L[115], L[116], L[117], L[118], L[119], L[120], L[121], L[122]], words8) 
/\ table([L[123], L[124], L[125], L[126], L[127], L[128]], words6) 
/\ table([L[129], L[130], L[131], L[132]], words4) 
/\ table([L[133], L[134], L[135], L[136]], words4) 
/\ table([L[137], L[138], L[139], L[140], L[141], L[142]], words6) 
/\ table([L[143], L[144], L[145], L[146], L[147], L[148], L[149], L[150]], words8) 
/\ table([L[151], L[152], L[153], L[154]], words4) 
/\ table([L[155], L[156], L[157], L[158], L[159]], words5) 
/\ table([L[160], L[161], L[162], L[163]], words4) 
/\ table([L[164], L[165], L[166], L[167]], words4) 
/\ table([L[168], L[169], L[170], L[171], L[172]], words5) 
/\ table([L[173], L[174], L[175], L[176]], words4) 
/\ table([L[177], L[178], L[179], L[180]], words4) 
/\ table([L[181], L[182], L[183], L[184], L[185]], words5) 
/\ table([L[186], L[187], L[188], L[189]], words4) 
/\ table([L[1], L[14], L[27], L[40]], words4) 
/\ table([L[62], L[76], L[89], L[102], L[115]], words5) 
/\ table([L[137], L[151], L[164], L[177]], words4) 
/\ table([L[2], L[15], L[28], L[41]], words4) 
/\ table([L[63], L[77], L[90], L[103], L[116]], words5) 
/\ table([L[138], L[152], L[165], L[178]], words4) 
/\ table([L[3], L[16], L[29], L[42]], words4) 
/\ table([L[64], L[78], L[91], L[104], L[117]], words5) 
/\ table([L[139], L[153], L[166], L[179]], words4) 
/\ table([L[4], L[17], L[30], L[43], L[54], L[65], L[79], L[92]], words8) 
/\ table([L[118], L[129], L[140], L[154], L[167], L[180]], words6) 
/\ table([L[44], L[55], L[66], L[80]], words4) 
/\ table([L[105], L[119], L[130], L[141]], words4) 
/\ table([L[5], L[18], L[31], L[45], L[56], L[67]], words6) 
/\ table([L[93], L[106], L[120], L[131], L[142], L[155], L[168], L[181]], words8) 
/\ table([L[6], L[19], L[32], L[46], L[57]], words5) 
/\ table([L[81], L[94], L[107], L[121], L[132]], words5) 
/\ table([L[156], L[169], L[182]], words3) 
/\ table([L[7], L[20], L[33], L[47]], words4) 
/\ table([L[68], L[82], L[95], L[108], L[122]], words5) 
/\ table([L[143], L[157], L[170], L[183]], words4) 
/\ table([L[8], L[21], L[34]], words3) 
/\ table([L[58], L[69], L[83], L[96], L[109]], words5) 
/\ table([L[133], L[144], L[158], L[171], L[184]], words5) 
/\ table([L[9], L[22], L[35], L[48], L[59], L[70], L[84], L[97]], words8) 
/\ table([L[123], L[134], L[145], L[159], L[172], L[185]], words6) 
/\ table([L[49], L[60], L[71], L[85]], words4) 
/\ table([L[110], L[124], L[135], L[146]], words4) 
/\ table([L[10], L[23], L[36], L[50], L[61], L[72]], words6) 
/\ table([L[98], L[111], L[125], L[136], L[147], L[160], L[173], L[186]], words8) 
/\ table([L[11], L[24], L[37], L[51]], words4) 
/\ table([L[73], L[86], L[99], L[112], L[126]], words5) 
/\ table([L[148], L[161], L[174], L[187]], words4) 
/\ table([L[12], L[25], L[38], L[52]], words4) 
/\ table([L[74], L[87], L[100], L[113], L[127]], words5) 
/\ table([L[149], L[162], L[175], L[188]], words4) 
/\ table([L[13], L[26], L[39], L[53]], words4) 
/\ table([L[75], L[88], L[101], L[114], L[128]], words5) 
/\ table([L[150], L[163], L[176], L[189]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 78;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,
5,6,7,8,9,0,0,0,0,0,0,0,0,0,0,
10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,
14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,
18,19,20,21,22,0,0,0,0,0,0,0,0,0,0,
23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,
27,28,29,30,0,0,0,0,0,0,0,0,0,0,0,
31,32,33,34,35,0,0,0,0,0,0,0,0,0,0,
36,37,38,39,0,0,0,0,0,0,0,0,0,0,0,
40,41,42,43,44,45,46,47,0,0,0,0,0,0,0,
48,49,50,51,52,53,0,0,0,0,0,0,0,0,0,
54,55,56,57,0,0,0,0,0,0,0,0,0,0,0,
58,59,60,61,0,0,0,0,0,0,0,0,0,0,0,
62,63,64,65,66,67,0,0,0,0,0,0,0,0,0,
68,69,70,71,72,73,74,75,0,0,0,0,0,0,0,
76,77,78,79,80,0,0,0,0,0,0,0,0,0,0,
81,82,83,84,85,0,0,0,0,0,0,0,0,0,0,
86,87,88,0,0,0,0,0,0,0,0,0,0,0,0,
89,90,91,92,0,0,0,0,0,0,0,0,0,0,0,
93,94,95,96,97,0,0,0,0,0,0,0,0,0,0,
98,99,100,101,0,0,0,0,0,0,0,0,0,0,0,
102,103,104,0,0,0,0,0,0,0,0,0,0,0,0,
105,106,107,108,109,0,0,0,0,0,0,0,0,0,0,
110,111,112,113,114,0,0,0,0,0,0,0,0,0,0,
115,116,117,118,119,120,121,122,0,0,0,0,0,0,0,
123,124,125,126,127,128,0,0,0,0,0,0,0,0,0,
129,130,131,132,0,0,0,0,0,0,0,0,0,0,0,
133,134,135,136,0,0,0,0,0,0,0,0,0,0,0,
137,138,139,140,141,142,0,0,0,0,0,0,0,0,0,
143,144,145,146,147,148,149,150,0,0,0,0,0,0,0,
151,152,153,154,0,0,0,0,0,0,0,0,0,0,0,
155,156,157,158,159,0,0,0,0,0,0,0,0,0,0,
160,161,162,163,0,0,0,0,0,0,0,0,0,0,0,
164,165,166,167,0,0,0,0,0,0,0,0,0,0,0,
168,169,170,171,172,0,0,0,0,0,0,0,0,0,0,
173,174,175,176,0,0,0,0,0,0,0,0,0,0,0,
177,178,179,180,0,0,0,0,0,0,0,0,0,0,0,
181,182,183,184,185,0,0,0,0,0,0,0,0,0,0,
186,187,188,189,0,0,0,0,0,0,0,0,0,0,0,
1,14,27,40,0,0,0,0,0,0,0,0,0,0,0,
62,76,89,102,115,0,0,0,0,0,0,0,0,0,0,
137,151,164,177,0,0,0,0,0,0,0,0,0,0,0,
2,15,28,41,0,0,0,0,0,0,0,0,0,0,0,
63,77,90,103,116,0,0,0,0,0,0,0,0,0,0,
138,152,165,178,0,0,0,0,0,0,0,0,0,0,0,
3,16,29,42,0,0,0,0,0,0,0,0,0,0,0,
64,78,91,104,117,0,0,0,0,0,0,0,0,0,0,
139,153,166,179,0,0,0,0,0,0,0,0,0,0,0,
4,17,30,43,54,65,79,92,0,0,0,0,0,0,0,
118,129,140,154,167,180,0,0,0,0,0,0,0,0,0,
44,55,66,80,0,0,0,0,0,0,0,0,0,0,0,
105,119,130,141,0,0,0,0,0,0,0,0,0,0,0,
5,18,31,45,56,67,0,0,0,0,0,0,0,0,0,
93,106,120,131,142,155,168,181,0,0,0,0,0,0,0,
6,19,32,46,57,0,0,0,0,0,0,0,0,0,0,
81,94,107,121,132,0,0,0,0,0,0,0,0,0,0,
156,169,182,0,0,0,0,0,0,0,0,0,0,0,0,
7,20,33,47,0,0,0,0,0,0,0,0,0,0,0,
68,82,95,108,122,0,0,0,0,0,0,0,0,0,0,
143,157,170,183,0,0,0,0,0,0,0,0,0,0,0,
8,21,34,0,0,0,0,0,0,0,0,0,0,0,0,
58,69,83,96,109,0,0,0,0,0,0,0,0,0,0,
133,144,158,171,184,0,0,0,0,0,0,0,0,0,0,
9,22,35,48,59,70,84,97,0,0,0,0,0,0,0,
123,134,145,159,172,185,0,0,0,0,0,0,0,0,0,
49,60,71,85,0,0,0,0,0,0,0,0,0,0,0,
110,124,135,146,0,0,0,0,0,0,0,0,0,0,0,
10,23,36,50,61,72,0,0,0,0,0,0,0,0,0,
98,111,125,136,147,160,173,186,0,0,0,0,0,0,0,
11,24,37,51,0,0,0,0,0,0,0,0,0,0,0,
73,86,99,112,126,0,0,0,0,0,0,0,0,0,0,
148,161,174,187,0,0,0,0,0,0,0,0,0,0,0,
12,25,38,52,0,0,0,0,0,0,0,0,0,0,0,
74,87,100,113,127,0,0,0,0,0,0,0,0,0,0,
149,162,175,188,0,0,0,0,0,0,0,0,0,0,0,
13,26,39,53,0,0,0,0,0,0,0,0,0,0,0,
75,88,101,114,128,0,0,0,0,0,0,0,0,0,0,
150,163,176,189,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 
14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 0, 23, 24, 25, 26, 
27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 
40, 41, 42, 43, 44, 45, 46, 47, 0, 48, 49, 50, 51, 52, 53, 
0, 0, 0, 54, 55, 56, 57, 0, 58, 59, 60, 61, 0, 0, 0, 
62, 63, 64, 65, 66, 67, 0, 68, 69, 70, 71, 72, 73, 74, 75, 
76, 77, 78, 79, 80, 0, 81, 82, 83, 84, 85, 0, 86, 87, 88, 
89, 90, 91, 92, 0, 93, 94, 95, 96, 97, 0, 98, 99, 100, 101, 
102, 103, 104, 0, 105, 106, 107, 108, 109, 0, 110, 111, 112, 113, 114, 
115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 124, 125, 126, 127, 128, 
0, 0, 0, 129, 130, 131, 132, 0, 133, 134, 135, 136, 0, 0, 0, 
137, 138, 139, 140, 141, 142, 0, 143, 144, 145, 146, 147, 148, 149, 150, 
151, 152, 153, 154, 0, 155, 156, 157, 158, 159, 0, 160, 161, 162, 163, 
164, 165, 166, 167, 0, 168, 169, 170, 171, 172, 0, 173, 174, 175, 176, 
177, 178, 179, 180, 0, 181, 182, 183, 184, 185, 0, 186, 187, 188, 189, 

]);


