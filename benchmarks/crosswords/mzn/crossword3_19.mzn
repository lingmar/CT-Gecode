%
% Crossword problem '15.10, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 19 1` ).
%
% This crossword model was 
%
% This is problem '15.10, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (19): 15.10, 15 x 15
% 
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   * * * * _ _ _ _ * _ _ _ _ _ _
%   _ _ _ _ _ * * _ _ _ _ _ * * *
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ _ _ _ * _ _ _ _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   * * * _ _ _ _ _ * * _ _ _ _ _
%   _ _ _ _ _ _ * _ _ _ _ * * * *
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _

include "crossword3.mzn"; 

problem_name = "15.10, 15 x 15";


% number of letters to assign
N = 190;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4]], words4) 
/\ table([L[5], L[6], L[7], L[8], L[9]], words5) 
/\ table([L[10], L[11], L[12], L[13]], words4) 
/\ table([L[14], L[15], L[16], L[17]], words4) 
/\ table([L[18], L[19], L[20], L[21], L[22]], words5) 
/\ table([L[23], L[24], L[25], L[26]], words4) 
/\ table([L[27], L[28], L[29], L[30], L[31], L[32], L[33], L[34], L[35], L[36]], words10) 
/\ table([L[37], L[38], L[39], L[40]], words4) 
/\ table([L[41], L[42], L[43], L[44], L[45], L[46], L[47], L[48], L[49], L[50]], words10) 
/\ table([L[51], L[52], L[53], L[54]], words4) 
/\ table([L[55], L[56], L[57], L[58]], words4) 
/\ table([L[59], L[60], L[61], L[62], L[63], L[64]], words6) 
/\ table([L[65], L[66], L[67], L[68], L[69]], words5) 
/\ table([L[70], L[71], L[72], L[73], L[74]], words5) 
/\ table([L[75], L[76], L[77], L[78]], words4) 
/\ table([L[79], L[80], L[81], L[82], L[83], L[84], L[85], L[86], L[87], L[88]], words10) 
/\ table([L[89], L[90], L[91], L[92], L[93], L[94], L[95]], words7) 
/\ table([L[96], L[97], L[98], L[99], L[100], L[101], L[102]], words7) 
/\ table([L[103], L[104], L[105], L[106], L[107], L[108], L[109], L[110], L[111], L[112]], words10) 
/\ table([L[113], L[114], L[115], L[116]], words4) 
/\ table([L[117], L[118], L[119], L[120], L[121]], words5) 
/\ table([L[122], L[123], L[124], L[125], L[126]], words5) 
/\ table([L[127], L[128], L[129], L[130], L[131], L[132]], words6) 
/\ table([L[133], L[134], L[135], L[136]], words4) 
/\ table([L[137], L[138], L[139], L[140]], words4) 
/\ table([L[141], L[142], L[143], L[144], L[145], L[146], L[147], L[148], L[149], L[150]], words10) 
/\ table([L[151], L[152], L[153], L[154]], words4) 
/\ table([L[155], L[156], L[157], L[158], L[159], L[160], L[161], L[162], L[163], L[164]], words10) 
/\ table([L[165], L[166], L[167], L[168]], words4) 
/\ table([L[169], L[170], L[171], L[172], L[173]], words5) 
/\ table([L[174], L[175], L[176], L[177]], words4) 
/\ table([L[178], L[179], L[180], L[181]], words4) 
/\ table([L[182], L[183], L[184], L[185], L[186]], words5) 
/\ table([L[187], L[188], L[189], L[190]], words4) 
/\ table([L[1], L[14], L[27], L[41]], words4) 
/\ table([L[65], L[75], L[89], L[103]], words4) 
/\ table([L[127], L[137], L[151], L[165], L[178]], words5) 
/\ table([L[2], L[15], L[28], L[42]], words4) 
/\ table([L[66], L[76], L[90], L[104]], words4) 
/\ table([L[128], L[138], L[152], L[166], L[179]], words5) 
/\ table([L[3], L[16], L[29], L[43]], words4) 
/\ table([L[67], L[77], L[91], L[105]], words4) 
/\ table([L[129], L[139], L[153], L[167], L[180]], words5) 
/\ table([L[4], L[17], L[30], L[44]], words4) 
/\ table([L[68], L[78], L[92], L[106], L[117], L[130], L[140], L[154], L[168], L[181]], words10) 
/\ table([L[31], L[45], L[55], L[69]], words4) 
/\ table([L[93], L[107], L[118], L[131]], words4) 
/\ table([L[5], L[18], L[32], L[46], L[56]], words5) 
/\ table([L[79], L[94], L[108], L[119], L[132], L[141], L[155], L[169], L[182]], words9) 
/\ table([L[6], L[19], L[33], L[47], L[57]], words5) 
/\ table([L[80], L[95], L[109], L[120]], words4) 
/\ table([L[142], L[156], L[170], L[183]], words4) 
/\ table([L[7], L[20], L[34], L[48], L[58], L[70], L[81]], words7) 
/\ table([L[110], L[121], L[133], L[143], L[157], L[171], L[184]], words7) 
/\ table([L[8], L[21], L[35], L[49]], words4) 
/\ table([L[71], L[82], L[96], L[111]], words4) 
/\ table([L[134], L[144], L[158], L[172], L[185]], words5) 
/\ table([L[9], L[22], L[36], L[50], L[59], L[72], L[83], L[97], L[112]], words9) 
/\ table([L[135], L[145], L[159], L[173], L[186]], words5) 
/\ table([L[60], L[73], L[84], L[98]], words4) 
/\ table([L[122], L[136], L[146], L[160]], words4) 
/\ table([L[10], L[23], L[37], L[51], L[61], L[74], L[85], L[99], L[113], L[123]], words10) 
/\ table([L[147], L[161], L[174], L[187]], words4) 
/\ table([L[11], L[24], L[38], L[52], L[62]], words5) 
/\ table([L[86], L[100], L[114], L[124]], words4) 
/\ table([L[148], L[162], L[175], L[188]], words4) 
/\ table([L[12], L[25], L[39], L[53], L[63]], words5) 
/\ table([L[87], L[101], L[115], L[125]], words4) 
/\ table([L[149], L[163], L[176], L[189]], words4) 
/\ table([L[13], L[26], L[40], L[54], L[64]], words5) 
/\ table([L[88], L[102], L[116], L[126]], words4) 
/\ table([L[150], L[164], L[177], L[190]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 72;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,
5,6,7,8,9,0,0,0,0,0,0,0,0,0,0,
10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,
14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,
18,19,20,21,22,0,0,0,0,0,0,0,0,0,0,
23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,
27,28,29,30,31,32,33,34,35,36,0,0,0,0,0,
37,38,39,40,0,0,0,0,0,0,0,0,0,0,0,
41,42,43,44,45,46,47,48,49,50,0,0,0,0,0,
51,52,53,54,0,0,0,0,0,0,0,0,0,0,0,
55,56,57,58,0,0,0,0,0,0,0,0,0,0,0,
59,60,61,62,63,64,0,0,0,0,0,0,0,0,0,
65,66,67,68,69,0,0,0,0,0,0,0,0,0,0,
70,71,72,73,74,0,0,0,0,0,0,0,0,0,0,
75,76,77,78,0,0,0,0,0,0,0,0,0,0,0,
79,80,81,82,83,84,85,86,87,88,0,0,0,0,0,
89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,
96,97,98,99,100,101,102,0,0,0,0,0,0,0,0,
103,104,105,106,107,108,109,110,111,112,0,0,0,0,0,
113,114,115,116,0,0,0,0,0,0,0,0,0,0,0,
117,118,119,120,121,0,0,0,0,0,0,0,0,0,0,
122,123,124,125,126,0,0,0,0,0,0,0,0,0,0,
127,128,129,130,131,132,0,0,0,0,0,0,0,0,0,
133,134,135,136,0,0,0,0,0,0,0,0,0,0,0,
137,138,139,140,0,0,0,0,0,0,0,0,0,0,0,
141,142,143,144,145,146,147,148,149,150,0,0,0,0,0,
151,152,153,154,0,0,0,0,0,0,0,0,0,0,0,
155,156,157,158,159,160,161,162,163,164,0,0,0,0,0,
165,166,167,168,0,0,0,0,0,0,0,0,0,0,0,
169,170,171,172,173,0,0,0,0,0,0,0,0,0,0,
174,175,176,177,0,0,0,0,0,0,0,0,0,0,0,
178,179,180,181,0,0,0,0,0,0,0,0,0,0,0,
182,183,184,185,186,0,0,0,0,0,0,0,0,0,0,
187,188,189,190,0,0,0,0,0,0,0,0,0,0,0,
1,14,27,41,0,0,0,0,0,0,0,0,0,0,0,
65,75,89,103,0,0,0,0,0,0,0,0,0,0,0,
127,137,151,165,178,0,0,0,0,0,0,0,0,0,0,
2,15,28,42,0,0,0,0,0,0,0,0,0,0,0,
66,76,90,104,0,0,0,0,0,0,0,0,0,0,0,
128,138,152,166,179,0,0,0,0,0,0,0,0,0,0,
3,16,29,43,0,0,0,0,0,0,0,0,0,0,0,
67,77,91,105,0,0,0,0,0,0,0,0,0,0,0,
129,139,153,167,180,0,0,0,0,0,0,0,0,0,0,
4,17,30,44,0,0,0,0,0,0,0,0,0,0,0,
68,78,92,106,117,130,140,154,168,181,0,0,0,0,0,
31,45,55,69,0,0,0,0,0,0,0,0,0,0,0,
93,107,118,131,0,0,0,0,0,0,0,0,0,0,0,
5,18,32,46,56,0,0,0,0,0,0,0,0,0,0,
79,94,108,119,132,141,155,169,182,0,0,0,0,0,0,
6,19,33,47,57,0,0,0,0,0,0,0,0,0,0,
80,95,109,120,0,0,0,0,0,0,0,0,0,0,0,
142,156,170,183,0,0,0,0,0,0,0,0,0,0,0,
7,20,34,48,58,70,81,0,0,0,0,0,0,0,0,
110,121,133,143,157,171,184,0,0,0,0,0,0,0,0,
8,21,35,49,0,0,0,0,0,0,0,0,0,0,0,
71,82,96,111,0,0,0,0,0,0,0,0,0,0,0,
134,144,158,172,185,0,0,0,0,0,0,0,0,0,0,
9,22,36,50,59,72,83,97,112,0,0,0,0,0,0,
135,145,159,173,186,0,0,0,0,0,0,0,0,0,0,
60,73,84,98,0,0,0,0,0,0,0,0,0,0,0,
122,136,146,160,0,0,0,0,0,0,0,0,0,0,0,
10,23,37,51,61,74,85,99,113,123,0,0,0,0,0,
147,161,174,187,0,0,0,0,0,0,0,0,0,0,0,
11,24,38,52,62,0,0,0,0,0,0,0,0,0,0,
86,100,114,124,0,0,0,0,0,0,0,0,0,0,0,
148,162,175,188,0,0,0,0,0,0,0,0,0,0,0,
12,25,39,53,63,0,0,0,0,0,0,0,0,0,0,
87,101,115,125,0,0,0,0,0,0,0,0,0,0,0,
149,163,176,189,0,0,0,0,0,0,0,0,0,0,0,
13,26,40,54,64,0,0,0,0,0,0,0,0,0,0,
88,102,116,126,0,0,0,0,0,0,0,0,0,0,0,
150,164,177,190,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 
14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 0, 23, 24, 25, 26, 
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40, 
41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 51, 52, 53, 54, 
0, 0, 0, 0, 55, 56, 57, 58, 0, 59, 60, 61, 62, 63, 64, 
65, 66, 67, 68, 69, 0, 0, 70, 71, 72, 73, 74, 0, 0, 0, 
75, 76, 77, 78, 0, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
89, 90, 91, 92, 93, 94, 95, 0, 96, 97, 98, 99, 100, 101, 102, 
103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 0, 113, 114, 115, 116, 
0, 0, 0, 117, 118, 119, 120, 121, 0, 0, 122, 123, 124, 125, 126, 
127, 128, 129, 130, 131, 132, 0, 133, 134, 135, 136, 0, 0, 0, 0, 
137, 138, 139, 140, 0, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
151, 152, 153, 154, 0, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
165, 166, 167, 168, 0, 169, 170, 171, 172, 173, 0, 174, 175, 176, 177, 
178, 179, 180, 181, 0, 182, 183, 184, 185, 186, 0, 187, 188, 189, 190, 

]);


