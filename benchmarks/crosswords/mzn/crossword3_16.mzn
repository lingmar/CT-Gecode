%
% Crossword problem '15.07, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 16 1` ).
%
% This crossword model was 
%
% This is problem '15.07, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (16): 15.07, 15 x 15
% 
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ _ _ * _ _ _ _ _ _ _
%   * * _ _ _ _ * _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _ _ * * *
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ * _ _ _ _ _ _ _ * _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   * * * _ _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ * _ _ _ _ * *
%   _ _ _ _ _ _ _ * _ _ _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _

include "crossword3.mzn"; 

problem_name = "15.07, 15 x 15";


% number of letters to assign
N = 193;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4]], words4) 
/\ table([L[5], L[6], L[7], L[8]], words4) 
/\ table([L[9], L[10], L[11], L[12], L[13]], words5) 
/\ table([L[14], L[15], L[16], L[17]], words4) 
/\ table([L[18], L[19], L[20], L[21]], words4) 
/\ table([L[22], L[23], L[24], L[25], L[26]], words5) 
/\ table([L[27], L[28], L[29], L[30], L[31], L[32], L[33], L[34], L[35]], words9) 
/\ table([L[36], L[37], L[38], L[39], L[40]], words5) 
/\ table([L[41], L[42], L[43], L[44], L[45], L[46], L[47]], words7) 
/\ table([L[48], L[49], L[50], L[51], L[52], L[53], L[54]], words7) 
/\ table([L[55], L[56], L[57], L[58]], words4) 
/\ table([L[59], L[60], L[61]], words3) 
/\ table([L[62], L[63], L[64], L[65]], words4) 
/\ table([L[66], L[67], L[68], L[69], L[70]], words5) 
/\ table([L[71], L[72], L[73], L[74], L[75], L[76]], words6) 
/\ table([L[77], L[78], L[79], L[80]], words4) 
/\ table([L[81], L[82], L[83], L[84], L[85], L[86], L[87], L[88], L[89], L[90]], words10) 
/\ table([L[91], L[92], L[93]], words3) 
/\ table([L[94], L[95], L[96], L[97], L[98], L[99], L[100]], words7) 
/\ table([L[101], L[102], L[103]], words3) 
/\ table([L[104], L[105], L[106], L[107], L[108], L[109], L[110], L[111], L[112], L[113]], words10) 
/\ table([L[114], L[115], L[116], L[117]], words4) 
/\ table([L[118], L[119], L[120], L[121], L[122], L[123]], words6) 
/\ table([L[124], L[125], L[126], L[127], L[128]], words5) 
/\ table([L[129], L[130], L[131], L[132]], words4) 
/\ table([L[133], L[134], L[135]], words3) 
/\ table([L[136], L[137], L[138], L[139]], words4) 
/\ table([L[140], L[141], L[142], L[143], L[144], L[145], L[146]], words7) 
/\ table([L[147], L[148], L[149], L[150], L[151], L[152], L[153]], words7) 
/\ table([L[154], L[155], L[156], L[157], L[158]], words5) 
/\ table([L[159], L[160], L[161], L[162], L[163], L[164], L[165], L[166], L[167]], words9) 
/\ table([L[168], L[169], L[170], L[171], L[172]], words5) 
/\ table([L[173], L[174], L[175], L[176]], words4) 
/\ table([L[177], L[178], L[179], L[180]], words4) 
/\ table([L[181], L[182], L[183], L[184], L[185]], words5) 
/\ table([L[186], L[187], L[188], L[189]], words4) 
/\ table([L[190], L[191], L[192], L[193]], words4) 
/\ table([L[1], L[14], L[27], L[41]], words4) 
/\ table([L[66], L[77], L[91], L[104]], words4) 
/\ table([L[129], L[140], L[154], L[168], L[181]], words5) 
/\ table([L[2], L[15], L[28], L[42]], words4) 
/\ table([L[67], L[78], L[92], L[105]], words4) 
/\ table([L[130], L[141], L[155], L[169], L[182]], words5) 
/\ table([L[3], L[16], L[29], L[43], L[55], L[68], L[79], L[93], L[106]], words9) 
/\ table([L[131], L[142], L[156], L[170], L[183]], words5) 
/\ table([L[4], L[17], L[30], L[44], L[56], L[69], L[80]], words7) 
/\ table([L[107], L[118], L[132], L[143], L[157], L[171], L[184]], words7) 
/\ table([L[31], L[45], L[57], L[70]], words4) 
/\ table([L[94], L[108], L[119]], words3) 
/\ table([L[144], L[158], L[172], L[185]], words4) 
/\ table([L[5], L[18], L[32], L[46], L[58]], words5) 
/\ table([L[81], L[95], L[109], L[120], L[133], L[145]], words6) 
/\ table([L[6], L[19], L[33], L[47]], words4) 
/\ table([L[71], L[82], L[96], L[110], L[121], L[134], L[146], L[159], L[173], L[186]], words10) 
/\ table([L[7], L[20], L[34]], words3) 
/\ table([L[59], L[72], L[83], L[97], L[111], L[122], L[135]], words7) 
/\ table([L[160], L[174], L[187]], words3) 
/\ table([L[8], L[21], L[35], L[48], L[60], L[73], L[84], L[98], L[112], L[123]], words10) 
/\ table([L[147], L[161], L[175], L[188]], words4) 
/\ table([L[49], L[61], L[74], L[85], L[99], L[113]], words6) 
/\ table([L[136], L[148], L[162], L[176], L[189]], words5) 
/\ table([L[9], L[22], L[36], L[50]], words4) 
/\ table([L[75], L[86], L[100]], words3) 
/\ table([L[124], L[137], L[149], L[163]], words4) 
/\ table([L[10], L[23], L[37], L[51], L[62], L[76], L[87]], words7) 
/\ table([L[114], L[125], L[138], L[150], L[164], L[177], L[190]], words7) 
/\ table([L[11], L[24], L[38], L[52], L[63]], words5) 
/\ table([L[88], L[101], L[115], L[126], L[139], L[151], L[165], L[178], L[191]], words9) 
/\ table([L[12], L[25], L[39], L[53], L[64]], words5) 
/\ table([L[89], L[102], L[116], L[127]], words4) 
/\ table([L[152], L[166], L[179], L[192]], words4) 
/\ table([L[13], L[26], L[40], L[54], L[65]], words5) 
/\ table([L[90], L[103], L[117], L[128]], words4) 
/\ table([L[153], L[167], L[180], L[193]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 74;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,
5,6,7,8,0,0,0,0,0,0,0,0,0,0,0,
9,10,11,12,13,0,0,0,0,0,0,0,0,0,0,
14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,
18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,
22,23,24,25,26,0,0,0,0,0,0,0,0,0,0,
27,28,29,30,31,32,33,34,35,0,0,0,0,0,0,
36,37,38,39,40,0,0,0,0,0,0,0,0,0,0,
41,42,43,44,45,46,47,0,0,0,0,0,0,0,0,
48,49,50,51,52,53,54,0,0,0,0,0,0,0,0,
55,56,57,58,0,0,0,0,0,0,0,0,0,0,0,
59,60,61,0,0,0,0,0,0,0,0,0,0,0,0,
62,63,64,65,0,0,0,0,0,0,0,0,0,0,0,
66,67,68,69,70,0,0,0,0,0,0,0,0,0,0,
71,72,73,74,75,76,0,0,0,0,0,0,0,0,0,
77,78,79,80,0,0,0,0,0,0,0,0,0,0,0,
81,82,83,84,85,86,87,88,89,90,0,0,0,0,0,
91,92,93,0,0,0,0,0,0,0,0,0,0,0,0,
94,95,96,97,98,99,100,0,0,0,0,0,0,0,0,
101,102,103,0,0,0,0,0,0,0,0,0,0,0,0,
104,105,106,107,108,109,110,111,112,113,0,0,0,0,0,
114,115,116,117,0,0,0,0,0,0,0,0,0,0,0,
118,119,120,121,122,123,0,0,0,0,0,0,0,0,0,
124,125,126,127,128,0,0,0,0,0,0,0,0,0,0,
129,130,131,132,0,0,0,0,0,0,0,0,0,0,0,
133,134,135,0,0,0,0,0,0,0,0,0,0,0,0,
136,137,138,139,0,0,0,0,0,0,0,0,0,0,0,
140,141,142,143,144,145,146,0,0,0,0,0,0,0,0,
147,148,149,150,151,152,153,0,0,0,0,0,0,0,0,
154,155,156,157,158,0,0,0,0,0,0,0,0,0,0,
159,160,161,162,163,164,165,166,167,0,0,0,0,0,0,
168,169,170,171,172,0,0,0,0,0,0,0,0,0,0,
173,174,175,176,0,0,0,0,0,0,0,0,0,0,0,
177,178,179,180,0,0,0,0,0,0,0,0,0,0,0,
181,182,183,184,185,0,0,0,0,0,0,0,0,0,0,
186,187,188,189,0,0,0,0,0,0,0,0,0,0,0,
190,191,192,193,0,0,0,0,0,0,0,0,0,0,0,
1,14,27,41,0,0,0,0,0,0,0,0,0,0,0,
66,77,91,104,0,0,0,0,0,0,0,0,0,0,0,
129,140,154,168,181,0,0,0,0,0,0,0,0,0,0,
2,15,28,42,0,0,0,0,0,0,0,0,0,0,0,
67,78,92,105,0,0,0,0,0,0,0,0,0,0,0,
130,141,155,169,182,0,0,0,0,0,0,0,0,0,0,
3,16,29,43,55,68,79,93,106,0,0,0,0,0,0,
131,142,156,170,183,0,0,0,0,0,0,0,0,0,0,
4,17,30,44,56,69,80,0,0,0,0,0,0,0,0,
107,118,132,143,157,171,184,0,0,0,0,0,0,0,0,
31,45,57,70,0,0,0,0,0,0,0,0,0,0,0,
94,108,119,0,0,0,0,0,0,0,0,0,0,0,0,
144,158,172,185,0,0,0,0,0,0,0,0,0,0,0,
5,18,32,46,58,0,0,0,0,0,0,0,0,0,0,
81,95,109,120,133,145,0,0,0,0,0,0,0,0,0,
6,19,33,47,0,0,0,0,0,0,0,0,0,0,0,
71,82,96,110,121,134,146,159,173,186,0,0,0,0,0,
7,20,34,0,0,0,0,0,0,0,0,0,0,0,0,
59,72,83,97,111,122,135,0,0,0,0,0,0,0,0,
160,174,187,0,0,0,0,0,0,0,0,0,0,0,0,
8,21,35,48,60,73,84,98,112,123,0,0,0,0,0,
147,161,175,188,0,0,0,0,0,0,0,0,0,0,0,
49,61,74,85,99,113,0,0,0,0,0,0,0,0,0,
136,148,162,176,189,0,0,0,0,0,0,0,0,0,0,
9,22,36,50,0,0,0,0,0,0,0,0,0,0,0,
75,86,100,0,0,0,0,0,0,0,0,0,0,0,0,
124,137,149,163,0,0,0,0,0,0,0,0,0,0,0,
10,23,37,51,62,76,87,0,0,0,0,0,0,0,0,
114,125,138,150,164,177,190,0,0,0,0,0,0,0,0,
11,24,38,52,63,0,0,0,0,0,0,0,0,0,0,
88,101,115,126,139,151,165,178,191,0,0,0,0,0,0,
12,25,39,53,64,0,0,0,0,0,0,0,0,0,0,
89,102,116,127,0,0,0,0,0,0,0,0,0,0,0,
152,166,179,192,0,0,0,0,0,0,0,0,0,0,0,
13,26,40,54,65,0,0,0,0,0,0,0,0,0,0,
90,103,117,128,0,0,0,0,0,0,0,0,0,0,0,
153,167,180,193,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 0, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 
14, 15, 16, 17, 0, 18, 19, 20, 21, 0, 22, 23, 24, 25, 26, 
27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 
41, 42, 43, 44, 45, 46, 47, 0, 48, 49, 50, 51, 52, 53, 54, 
0, 0, 55, 56, 57, 58, 0, 59, 60, 61, 0, 62, 63, 64, 65, 
66, 67, 68, 69, 70, 0, 71, 72, 73, 74, 75, 76, 0, 0, 0, 
77, 78, 79, 80, 0, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
91, 92, 93, 0, 94, 95, 96, 97, 98, 99, 100, 0, 101, 102, 103, 
104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 0, 114, 115, 116, 117, 
0, 0, 0, 118, 119, 120, 121, 122, 123, 0, 124, 125, 126, 127, 128, 
129, 130, 131, 132, 0, 133, 134, 135, 0, 136, 137, 138, 139, 0, 0, 
140, 141, 142, 143, 144, 145, 146, 0, 147, 148, 149, 150, 151, 152, 153, 
154, 155, 156, 157, 158, 0, 159, 160, 161, 162, 163, 164, 165, 166, 167, 
168, 169, 170, 171, 172, 0, 173, 174, 175, 176, 0, 177, 178, 179, 180, 
181, 182, 183, 184, 185, 0, 186, 187, 188, 189, 0, 190, 191, 192, 193, 

]);


