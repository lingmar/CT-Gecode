%
% Crossword problem '15.05, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 14 1` ).
%
% This crossword model was 
%
% This is problem '15.05, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (14): 15.05, 15 x 15
% 
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   * * * * _ _ _ * * * _ _ _ _ _
%   _ _ _ _ _ _ * _ _ _ _ * * * *
%   _ _ _ _ _ * * _ _ _ _ _ _ _ *
%   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
%   * _ _ _ _ _ _ _ * * _ _ _ _ _
%   * * * * _ _ _ _ * _ _ _ _ _ _
%   _ _ _ _ _ * * * _ _ _ * * * *
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _

include "crossword3.mzn"; 

problem_name = "15.05, 15 x 15";


% number of letters to assign
N = 181;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4], L[5]], words5) 
/\ table([L[6], L[7], L[8], L[9]], words4) 
/\ table([L[10], L[11], L[12], L[13]], words4) 
/\ table([L[14], L[15], L[16], L[17], L[18]], words5) 
/\ table([L[19], L[20], L[21], L[22]], words4) 
/\ table([L[23], L[24], L[25], L[26]], words4) 
/\ table([L[27], L[28], L[29], L[30], L[31], L[32], L[33], L[34], L[35], L[36]], words10) 
/\ table([L[37], L[38], L[39], L[40]], words4) 
/\ table([L[41], L[42], L[43], L[44]], words4) 
/\ table([L[45], L[46], L[47], L[48], L[49]], words5) 
/\ table([L[50], L[51], L[52], L[53]], words4) 
/\ table([L[54], L[55], L[56]], words3) 
/\ table([L[57], L[58], L[59], L[60], L[61]], words5) 
/\ table([L[62], L[63], L[64], L[65], L[66], L[67]], words6) 
/\ table([L[68], L[69], L[70], L[71]], words4) 
/\ table([L[72], L[73], L[74], L[75], L[76]], words5) 
/\ table([L[77], L[78], L[79], L[80], L[81], L[82], L[83]], words7) 
/\ table([L[84], L[85], L[86], L[87], L[88], L[89], L[90], L[91], L[92], L[93], L[94], L[95], L[96], L[97], L[98]], words15) 
/\ table([L[99], L[100], L[101], L[102], L[103], L[104], L[105]], words7) 
/\ table([L[106], L[107], L[108], L[109], L[110]], words5) 
/\ table([L[111], L[112], L[113], L[114]], words4) 
/\ table([L[115], L[116], L[117], L[118], L[119], L[120]], words6) 
/\ table([L[121], L[122], L[123], L[124], L[125]], words5) 
/\ table([L[126], L[127], L[128]], words3) 
/\ table([L[129], L[130], L[131], L[132]], words4) 
/\ table([L[133], L[134], L[135], L[136], L[137]], words5) 
/\ table([L[138], L[139], L[140], L[141]], words4) 
/\ table([L[142], L[143], L[144], L[145]], words4) 
/\ table([L[146], L[147], L[148], L[149], L[150], L[151], L[152], L[153], L[154], L[155]], words10) 
/\ table([L[156], L[157], L[158], L[159]], words4) 
/\ table([L[160], L[161], L[162], L[163]], words4) 
/\ table([L[164], L[165], L[166], L[167], L[168]], words5) 
/\ table([L[169], L[170], L[171], L[172]], words4) 
/\ table([L[173], L[174], L[175], L[176]], words4) 
/\ table([L[177], L[178], L[179], L[180], L[181]], words5) 
/\ table([L[1], L[14], L[27], L[41]], words4) 
/\ table([L[62], L[72], L[84]], words3) 
/\ table([L[121], L[129], L[142], L[156], L[169]], words5) 
/\ table([L[2], L[15], L[28], L[42]], words4) 
/\ table([L[63], L[73], L[85], L[99]], words4) 
/\ table([L[122], L[130], L[143], L[157], L[170]], words5) 
/\ table([L[3], L[16], L[29], L[43]], words4) 
/\ table([L[64], L[74], L[86], L[100]], words4) 
/\ table([L[123], L[131], L[144], L[158], L[171]], words5) 
/\ table([L[4], L[17], L[30], L[44]], words4) 
/\ table([L[65], L[75], L[87], L[101]], words4) 
/\ table([L[124], L[132], L[145], L[159], L[172]], words5) 
/\ table([L[5], L[18], L[31]], words3) 
/\ table([L[54], L[66], L[76], L[88], L[102], L[111], L[125]], words7) 
/\ table([L[32], L[45], L[55], L[67]], words4) 
/\ table([L[89], L[103], L[112]], words3) 
/\ table([L[133], L[146], L[160], L[173]], words4) 
/\ table([L[6], L[19], L[33], L[46], L[56]], words5) 
/\ table([L[90], L[104], L[113]], words3) 
/\ table([L[134], L[147], L[161], L[174]], words4) 
/\ table([L[7], L[20], L[34], L[47]], words4) 
/\ table([L[68], L[77], L[91], L[105], L[114]], words5) 
/\ table([L[135], L[148], L[162], L[175]], words4) 
/\ table([L[8], L[21], L[35], L[48]], words4) 
/\ table([L[69], L[78], L[92]], words3) 
/\ table([L[126], L[136], L[149], L[163], L[176]], words5) 
/\ table([L[9], L[22], L[36], L[49]], words4) 
/\ table([L[70], L[79], L[93]], words3) 
/\ table([L[115], L[127], L[137], L[150]], words4) 
/\ table([L[57], L[71], L[80], L[94], L[106], L[116], L[128]], words7) 
/\ table([L[151], L[164], L[177]], words3) 
/\ table([L[10], L[23], L[37], L[50], L[58]], words5) 
/\ table([L[81], L[95], L[107], L[117]], words4) 
/\ table([L[138], L[152], L[165], L[178]], words4) 
/\ table([L[11], L[24], L[38], L[51], L[59]], words5) 
/\ table([L[82], L[96], L[108], L[118]], words4) 
/\ table([L[139], L[153], L[166], L[179]], words4) 
/\ table([L[12], L[25], L[39], L[52], L[60]], words5) 
/\ table([L[83], L[97], L[109], L[119]], words4) 
/\ table([L[140], L[154], L[167], L[180]], words4) 
/\ table([L[13], L[26], L[40], L[53], L[61]], words5) 
/\ table([L[98], L[110], L[120]], words3) 
/\ table([L[141], L[155], L[168], L[181]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 78;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,
6,7,8,9,0,0,0,0,0,0,0,0,0,0,0,
10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,
14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,
19,20,21,22,0,0,0,0,0,0,0,0,0,0,0,
23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,
27,28,29,30,31,32,33,34,35,36,0,0,0,0,0,
37,38,39,40,0,0,0,0,0,0,0,0,0,0,0,
41,42,43,44,0,0,0,0,0,0,0,0,0,0,0,
45,46,47,48,49,0,0,0,0,0,0,0,0,0,0,
50,51,52,53,0,0,0,0,0,0,0,0,0,0,0,
54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,
57,58,59,60,61,0,0,0,0,0,0,0,0,0,0,
62,63,64,65,66,67,0,0,0,0,0,0,0,0,0,
68,69,70,71,0,0,0,0,0,0,0,0,0,0,0,
72,73,74,75,76,0,0,0,0,0,0,0,0,0,0,
77,78,79,80,81,82,83,0,0,0,0,0,0,0,0,
84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,
99,100,101,102,103,104,105,0,0,0,0,0,0,0,0,
106,107,108,109,110,0,0,0,0,0,0,0,0,0,0,
111,112,113,114,0,0,0,0,0,0,0,0,0,0,0,
115,116,117,118,119,120,0,0,0,0,0,0,0,0,0,
121,122,123,124,125,0,0,0,0,0,0,0,0,0,0,
126,127,128,0,0,0,0,0,0,0,0,0,0,0,0,
129,130,131,132,0,0,0,0,0,0,0,0,0,0,0,
133,134,135,136,137,0,0,0,0,0,0,0,0,0,0,
138,139,140,141,0,0,0,0,0,0,0,0,0,0,0,
142,143,144,145,0,0,0,0,0,0,0,0,0,0,0,
146,147,148,149,150,151,152,153,154,155,0,0,0,0,0,
156,157,158,159,0,0,0,0,0,0,0,0,0,0,0,
160,161,162,163,0,0,0,0,0,0,0,0,0,0,0,
164,165,166,167,168,0,0,0,0,0,0,0,0,0,0,
169,170,171,172,0,0,0,0,0,0,0,0,0,0,0,
173,174,175,176,0,0,0,0,0,0,0,0,0,0,0,
177,178,179,180,181,0,0,0,0,0,0,0,0,0,0,
1,14,27,41,0,0,0,0,0,0,0,0,0,0,0,
62,72,84,0,0,0,0,0,0,0,0,0,0,0,0,
121,129,142,156,169,0,0,0,0,0,0,0,0,0,0,
2,15,28,42,0,0,0,0,0,0,0,0,0,0,0,
63,73,85,99,0,0,0,0,0,0,0,0,0,0,0,
122,130,143,157,170,0,0,0,0,0,0,0,0,0,0,
3,16,29,43,0,0,0,0,0,0,0,0,0,0,0,
64,74,86,100,0,0,0,0,0,0,0,0,0,0,0,
123,131,144,158,171,0,0,0,0,0,0,0,0,0,0,
4,17,30,44,0,0,0,0,0,0,0,0,0,0,0,
65,75,87,101,0,0,0,0,0,0,0,0,0,0,0,
124,132,145,159,172,0,0,0,0,0,0,0,0,0,0,
5,18,31,0,0,0,0,0,0,0,0,0,0,0,0,
54,66,76,88,102,111,125,0,0,0,0,0,0,0,0,
32,45,55,67,0,0,0,0,0,0,0,0,0,0,0,
89,103,112,0,0,0,0,0,0,0,0,0,0,0,0,
133,146,160,173,0,0,0,0,0,0,0,0,0,0,0,
6,19,33,46,56,0,0,0,0,0,0,0,0,0,0,
90,104,113,0,0,0,0,0,0,0,0,0,0,0,0,
134,147,161,174,0,0,0,0,0,0,0,0,0,0,0,
7,20,34,47,0,0,0,0,0,0,0,0,0,0,0,
68,77,91,105,114,0,0,0,0,0,0,0,0,0,0,
135,148,162,175,0,0,0,0,0,0,0,0,0,0,0,
8,21,35,48,0,0,0,0,0,0,0,0,0,0,0,
69,78,92,0,0,0,0,0,0,0,0,0,0,0,0,
126,136,149,163,176,0,0,0,0,0,0,0,0,0,0,
9,22,36,49,0,0,0,0,0,0,0,0,0,0,0,
70,79,93,0,0,0,0,0,0,0,0,0,0,0,0,
115,127,137,150,0,0,0,0,0,0,0,0,0,0,0,
57,71,80,94,106,116,128,0,0,0,0,0,0,0,0,
151,164,177,0,0,0,0,0,0,0,0,0,0,0,0,
10,23,37,50,58,0,0,0,0,0,0,0,0,0,0,
81,95,107,117,0,0,0,0,0,0,0,0,0,0,0,
138,152,165,178,0,0,0,0,0,0,0,0,0,0,0,
11,24,38,51,59,0,0,0,0,0,0,0,0,0,0,
82,96,108,118,0,0,0,0,0,0,0,0,0,0,0,
139,153,166,179,0,0,0,0,0,0,0,0,0,0,0,
12,25,39,52,60,0,0,0,0,0,0,0,0,0,0,
83,97,109,119,0,0,0,0,0,0,0,0,0,0,0,
140,154,167,180,0,0,0,0,0,0,0,0,0,0,0,
13,26,40,53,61,0,0,0,0,0,0,0,0,0,0,
98,110,120,0,0,0,0,0,0,0,0,0,0,0,0,
141,155,168,181,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 0, 10, 11, 12, 13, 
14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 0, 23, 24, 25, 26, 
27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40, 
41, 42, 43, 44, 0, 45, 46, 47, 48, 49, 0, 50, 51, 52, 53, 
0, 0, 0, 0, 54, 55, 56, 0, 0, 0, 57, 58, 59, 60, 61, 
62, 63, 64, 65, 66, 67, 0, 68, 69, 70, 71, 0, 0, 0, 0, 
72, 73, 74, 75, 76, 0, 0, 77, 78, 79, 80, 81, 82, 83, 0, 
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 
0, 99, 100, 101, 102, 103, 104, 105, 0, 0, 106, 107, 108, 109, 110, 
0, 0, 0, 0, 111, 112, 113, 114, 0, 115, 116, 117, 118, 119, 120, 
121, 122, 123, 124, 125, 0, 0, 0, 126, 127, 128, 0, 0, 0, 0, 
129, 130, 131, 132, 0, 133, 134, 135, 136, 137, 0, 138, 139, 140, 141, 
142, 143, 144, 145, 0, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
156, 157, 158, 159, 0, 160, 161, 162, 163, 0, 164, 165, 166, 167, 168, 
169, 170, 171, 172, 0, 173, 174, 175, 176, 0, 177, 178, 179, 180, 181, 

]);


