%
% Crossword problem '15.08, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 17 1` ).
%
% This crossword model was 
%
% This is problem '15.08, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (17): 15.08, 15 x 15
% 
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ _ * _ _ _
%   * * * _ _ _ * _ _ _ * _ _ _ _
%   _ _ _ * _ _ _ _ _ _ _ _ * * *
%   _ _ _ _ * _ _ _ * _ _ _ _ _ _
%   _ _ _ _ _ _ _ * _ _ _ _ _ _ _
%   _ _ _ _ _ _ * _ _ _ * _ _ _ _
%   * * * _ _ _ _ _ _ _ _ * _ _ _
%   _ _ _ _ * _ _ _ * _ _ _ * * *
%   _ _ _ * _ _ _ _ _ * _ _ _ _ _
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _

include "crossword3.mzn"; 

problem_name = "15.08, 15 x 15";


% number of letters to assign
N = 186;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4]], words4) 
/\ table([L[5], L[6], L[7], L[8]], words4) 
/\ table([L[9], L[10], L[11], L[12], L[13]], words5) 
/\ table([L[14], L[15], L[16], L[17]], words4) 
/\ table([L[18], L[19], L[20], L[21]], words4) 
/\ table([L[22], L[23], L[24], L[25], L[26]], words5) 
/\ table([L[27], L[28], L[29], L[30]], words4) 
/\ table([L[31], L[32], L[33], L[34]], words4) 
/\ table([L[35], L[36], L[37], L[38], L[39]], words5) 
/\ table([L[40], L[41], L[42], L[43], L[44]], words5) 
/\ table([L[45], L[46], L[47], L[48], L[49]], words5) 
/\ table([L[50], L[51], L[52]], words3) 
/\ table([L[53], L[54], L[55]], words3) 
/\ table([L[56], L[57], L[58]], words3) 
/\ table([L[59], L[60], L[61], L[62]], words4) 
/\ table([L[63], L[64], L[65]], words3) 
/\ table([L[66], L[67], L[68], L[69], L[70], L[71], L[72], L[73]], words8) 
/\ table([L[74], L[75], L[76], L[77]], words4) 
/\ table([L[78], L[79], L[80]], words3) 
/\ table([L[81], L[82], L[83], L[84], L[85], L[86]], words6) 
/\ table([L[87], L[88], L[89], L[90], L[91], L[92], L[93]], words7) 
/\ table([L[94], L[95], L[96], L[97], L[98], L[99], L[100]], words7) 
/\ table([L[101], L[102], L[103], L[104], L[105], L[106]], words6) 
/\ table([L[107], L[108], L[109]], words3) 
/\ table([L[110], L[111], L[112], L[113]], words4) 
/\ table([L[114], L[115], L[116], L[117], L[118], L[119], L[120], L[121]], words8) 
/\ table([L[122], L[123], L[124]], words3) 
/\ table([L[125], L[126], L[127], L[128]], words4) 
/\ table([L[129], L[130], L[131]], words3) 
/\ table([L[132], L[133], L[134]], words3) 
/\ table([L[135], L[136], L[137]], words3) 
/\ table([L[138], L[139], L[140], L[141], L[142]], words5) 
/\ table([L[143], L[144], L[145], L[146], L[147]], words5) 
/\ table([L[148], L[149], L[150], L[151], L[152]], words5) 
/\ table([L[153], L[154], L[155], L[156]], words4) 
/\ table([L[157], L[158], L[159], L[160]], words4) 
/\ table([L[161], L[162], L[163], L[164], L[165]], words5) 
/\ table([L[166], L[167], L[168], L[169]], words4) 
/\ table([L[170], L[171], L[172], L[173]], words4) 
/\ table([L[174], L[175], L[176], L[177], L[178]], words5) 
/\ table([L[179], L[180], L[181], L[182]], words4) 
/\ table([L[183], L[184], L[185], L[186]], words4) 
/\ table([L[1], L[14], L[27], L[40]], words4) 
/\ table([L[63], L[74], L[87], L[101]], words4) 
/\ table([L[125], L[135], L[148], L[161], L[174]], words5) 
/\ table([L[2], L[15], L[28], L[41]], words4) 
/\ table([L[64], L[75], L[88], L[102]], words4) 
/\ table([L[126], L[136], L[149], L[162], L[175]], words5) 
/\ table([L[3], L[16], L[29], L[42]], words4) 
/\ table([L[65], L[76], L[89], L[103]], words4) 
/\ table([L[127], L[137], L[150], L[163], L[176]], words5) 
/\ table([L[4], L[17], L[30], L[43], L[53]], words5) 
/\ table([L[77], L[90], L[104], L[114], L[128]], words5) 
/\ table([L[151], L[164], L[177]], words3) 
/\ table([L[44], L[54], L[66]], words3) 
/\ table([L[91], L[105], L[115]], words3) 
/\ table([L[138], L[152], L[165], L[178]], words4) 
/\ table([L[5], L[18], L[31]], words3) 
/\ table([L[55], L[67], L[78], L[92], L[106], L[116], L[129], L[139]], words8) 
/\ table([L[6], L[19], L[32], L[45]], words4) 
/\ table([L[68], L[79], L[93]], words3) 
/\ table([L[117], L[130], L[140], L[153], L[166], L[179]], words6) 
/\ table([L[7], L[20], L[33], L[46], L[56], L[69], L[80]], words7) 
/\ table([L[107], L[118], L[131], L[141], L[154], L[167], L[180]], words7) 
/\ table([L[8], L[21], L[34], L[47], L[57], L[70]], words6) 
/\ table([L[94], L[108], L[119]], words3) 
/\ table([L[142], L[155], L[168], L[181]], words4) 
/\ table([L[48], L[58], L[71], L[81], L[95], L[109], L[120], L[132]], words8) 
/\ table([L[156], L[169], L[182]], words3) 
/\ table([L[9], L[22], L[35], L[49]], words4) 
/\ table([L[72], L[82], L[96]], words3) 
/\ table([L[121], L[133], L[143]], words3) 
/\ table([L[10], L[23], L[36]], words3) 
/\ table([L[59], L[73], L[83], L[97], L[110]], words5) 
/\ table([L[134], L[144], L[157], L[170], L[183]], words5) 
/\ table([L[11], L[24], L[37], L[50], L[60]], words5) 
/\ table([L[84], L[98], L[111], L[122]], words4) 
/\ table([L[145], L[158], L[171], L[184]], words4) 
/\ table([L[12], L[25], L[38], L[51], L[61]], words5) 
/\ table([L[85], L[99], L[112], L[123]], words4) 
/\ table([L[146], L[159], L[172], L[185]], words4) 
/\ table([L[13], L[26], L[39], L[52], L[62]], words5) 
/\ table([L[86], L[100], L[113], L[124]], words4) 
/\ table([L[147], L[160], L[173], L[186]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 84;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,
5,6,7,8,0,0,0,0,0,0,0,0,0,0,0,
9,10,11,12,13,0,0,0,0,0,0,0,0,0,0,
14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,
18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,
22,23,24,25,26,0,0,0,0,0,0,0,0,0,0,
27,28,29,30,0,0,0,0,0,0,0,0,0,0,0,
31,32,33,34,0,0,0,0,0,0,0,0,0,0,0,
35,36,37,38,39,0,0,0,0,0,0,0,0,0,0,
40,41,42,43,44,0,0,0,0,0,0,0,0,0,0,
45,46,47,48,49,0,0,0,0,0,0,0,0,0,0,
50,51,52,0,0,0,0,0,0,0,0,0,0,0,0,
53,54,55,0,0,0,0,0,0,0,0,0,0,0,0,
56,57,58,0,0,0,0,0,0,0,0,0,0,0,0,
59,60,61,62,0,0,0,0,0,0,0,0,0,0,0,
63,64,65,0,0,0,0,0,0,0,0,0,0,0,0,
66,67,68,69,70,71,72,73,0,0,0,0,0,0,0,
74,75,76,77,0,0,0,0,0,0,0,0,0,0,0,
78,79,80,0,0,0,0,0,0,0,0,0,0,0,0,
81,82,83,84,85,86,0,0,0,0,0,0,0,0,0,
87,88,89,90,91,92,93,0,0,0,0,0,0,0,0,
94,95,96,97,98,99,100,0,0,0,0,0,0,0,0,
101,102,103,104,105,106,0,0,0,0,0,0,0,0,0,
107,108,109,0,0,0,0,0,0,0,0,0,0,0,0,
110,111,112,113,0,0,0,0,0,0,0,0,0,0,0,
114,115,116,117,118,119,120,121,0,0,0,0,0,0,0,
122,123,124,0,0,0,0,0,0,0,0,0,0,0,0,
125,126,127,128,0,0,0,0,0,0,0,0,0,0,0,
129,130,131,0,0,0,0,0,0,0,0,0,0,0,0,
132,133,134,0,0,0,0,0,0,0,0,0,0,0,0,
135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,
138,139,140,141,142,0,0,0,0,0,0,0,0,0,0,
143,144,145,146,147,0,0,0,0,0,0,0,0,0,0,
148,149,150,151,152,0,0,0,0,0,0,0,0,0,0,
153,154,155,156,0,0,0,0,0,0,0,0,0,0,0,
157,158,159,160,0,0,0,0,0,0,0,0,0,0,0,
161,162,163,164,165,0,0,0,0,0,0,0,0,0,0,
166,167,168,169,0,0,0,0,0,0,0,0,0,0,0,
170,171,172,173,0,0,0,0,0,0,0,0,0,0,0,
174,175,176,177,178,0,0,0,0,0,0,0,0,0,0,
179,180,181,182,0,0,0,0,0,0,0,0,0,0,0,
183,184,185,186,0,0,0,0,0,0,0,0,0,0,0,
1,14,27,40,0,0,0,0,0,0,0,0,0,0,0,
63,74,87,101,0,0,0,0,0,0,0,0,0,0,0,
125,135,148,161,174,0,0,0,0,0,0,0,0,0,0,
2,15,28,41,0,0,0,0,0,0,0,0,0,0,0,
64,75,88,102,0,0,0,0,0,0,0,0,0,0,0,
126,136,149,162,175,0,0,0,0,0,0,0,0,0,0,
3,16,29,42,0,0,0,0,0,0,0,0,0,0,0,
65,76,89,103,0,0,0,0,0,0,0,0,0,0,0,
127,137,150,163,176,0,0,0,0,0,0,0,0,0,0,
4,17,30,43,53,0,0,0,0,0,0,0,0,0,0,
77,90,104,114,128,0,0,0,0,0,0,0,0,0,0,
151,164,177,0,0,0,0,0,0,0,0,0,0,0,0,
44,54,66,0,0,0,0,0,0,0,0,0,0,0,0,
91,105,115,0,0,0,0,0,0,0,0,0,0,0,0,
138,152,165,178,0,0,0,0,0,0,0,0,0,0,0,
5,18,31,0,0,0,0,0,0,0,0,0,0,0,0,
55,67,78,92,106,116,129,139,0,0,0,0,0,0,0,
6,19,32,45,0,0,0,0,0,0,0,0,0,0,0,
68,79,93,0,0,0,0,0,0,0,0,0,0,0,0,
117,130,140,153,166,179,0,0,0,0,0,0,0,0,0,
7,20,33,46,56,69,80,0,0,0,0,0,0,0,0,
107,118,131,141,154,167,180,0,0,0,0,0,0,0,0,
8,21,34,47,57,70,0,0,0,0,0,0,0,0,0,
94,108,119,0,0,0,0,0,0,0,0,0,0,0,0,
142,155,168,181,0,0,0,0,0,0,0,0,0,0,0,
48,58,71,81,95,109,120,132,0,0,0,0,0,0,0,
156,169,182,0,0,0,0,0,0,0,0,0,0,0,0,
9,22,35,49,0,0,0,0,0,0,0,0,0,0,0,
72,82,96,0,0,0,0,0,0,0,0,0,0,0,0,
121,133,143,0,0,0,0,0,0,0,0,0,0,0,0,
10,23,36,0,0,0,0,0,0,0,0,0,0,0,0,
59,73,83,97,110,0,0,0,0,0,0,0,0,0,0,
134,144,157,170,183,0,0,0,0,0,0,0,0,0,0,
11,24,37,50,60,0,0,0,0,0,0,0,0,0,0,
84,98,111,122,0,0,0,0,0,0,0,0,0,0,0,
145,158,171,184,0,0,0,0,0,0,0,0,0,0,0,
12,25,38,51,61,0,0,0,0,0,0,0,0,0,0,
85,99,112,123,0,0,0,0,0,0,0,0,0,0,0,
146,159,172,185,0,0,0,0,0,0,0,0,0,0,0,
13,26,39,52,62,0,0,0,0,0,0,0,0,0,0,
86,100,113,124,0,0,0,0,0,0,0,0,0,0,0,
147,160,173,186,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 0, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 
14, 15, 16, 17, 0, 18, 19, 20, 21, 0, 22, 23, 24, 25, 26, 
27, 28, 29, 30, 0, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 
40, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49, 0, 50, 51, 52, 
0, 0, 0, 53, 54, 55, 0, 56, 57, 58, 0, 59, 60, 61, 62, 
63, 64, 65, 0, 66, 67, 68, 69, 70, 71, 72, 73, 0, 0, 0, 
74, 75, 76, 77, 0, 78, 79, 80, 0, 81, 82, 83, 84, 85, 86, 
87, 88, 89, 90, 91, 92, 93, 0, 94, 95, 96, 97, 98, 99, 100, 
101, 102, 103, 104, 105, 106, 0, 107, 108, 109, 0, 110, 111, 112, 113, 
0, 0, 0, 114, 115, 116, 117, 118, 119, 120, 121, 0, 122, 123, 124, 
125, 126, 127, 128, 0, 129, 130, 131, 0, 132, 133, 134, 0, 0, 0, 
135, 136, 137, 0, 138, 139, 140, 141, 142, 0, 143, 144, 145, 146, 147, 
148, 149, 150, 151, 152, 0, 153, 154, 155, 156, 0, 157, 158, 159, 160, 
161, 162, 163, 164, 165, 0, 166, 167, 168, 169, 0, 170, 171, 172, 173, 
174, 175, 176, 177, 178, 0, 179, 180, 181, 182, 0, 183, 184, 185, 186, 

]);


