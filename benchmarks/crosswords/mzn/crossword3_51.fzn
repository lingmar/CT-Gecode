predicate table_int(array [int] of var int: x,array [int,int] of int: t);
array [1..2433] of int: words3 = [1,15,12,1,2,5,1,4,1,1,12,1,1,12,9,1,13,25,1,14,1,1,14,14,1,16,18,1,18,1,1,18,11,1,18,20,1,20,19,1,21,7,1,22,1,1,22,5,2,13,23,2,5,14,2,9,2,2,9,3,2,15,2,2,20,21,2,21,4,3,1,12,3,8,5,3,8,9,3,9,4,3,15,12,3,15,13,3,15,24,3,15,25,4,1,14,4,1,25,4,5,3,4,5,5,4,5,12,4,5,13,4,9,19,4,9,24,4,15,5,4,15,14,4,15,20,4,15,23,5,3,15,5,12,9,5,14,7,5,19,17,5,22,1,5,22,5,6,4,18,6,1,25,6,5,2,6,5,4,6,5,26,6,12,1,6,12,15,6,15,24,6,18,9,6,18,25,7,20,5,7,1,16,7,1,25,7,5,14,7,5,15,7,5,18,7,9,12,7,15,1,7,15,4,7,15,7,7,21,19,7,21,25,8,1,12,8,1,13,8,1,14,8,1,25,8,15,14,8,21,9,8,21,14,8,21,19,9,2,13,9,1,14,9,2,15,9,4,1,9,11,5,9,12,1,9,12,12,9,14,1,9,14,3,9,14,4,9,18,1,9,20,15,9,22,1,9,22,25,10,6,11,10,1,14,10,1,25,10,5,4,10,5,23,10,9,13,10,15,2,10,15,5,10,15,14,10,15,25,10,21,12,10,21,14,11,1,25,11,5,14,11,5,25,11,9,13,11,9,16,11,9,20,12,2,10,12,1,15,12,5,1,12,5,5,12,5,14,12,5,15,12,5,19,12,5,23,12,9,5,12,9,14,12,9,26,12,15,14,12,15,20,12,15,21,12,20,4,12,21,26,12,25,24,13,3,9,13,7,13,13,8,26,13,9,20,13,1,3,13,1,5,13,1,9,13,1,10,13,1,14,13,1,15,13,1,18,13,1,24,13,1,25,13,5,7,13,5,12,13,9,7,13,9,1,13,9,14,13,9,18,13,15,5,13,15,14,13,18,19,14,1,13,14,1,14,14,1,20,14,5,4,14,5,22,14,15,5,14,15,8,14,15,22,15,11,19,15,3,20,15,12,1,15,14,15,15,18,1,15,18,18,16,1,13,16,1,14,16,1,20,16,5,7,16,5,9,16,8,4,16,15,5,16,25,13,17,15,13,18,3,1,18,1,5,18,1,25,18,5,4,18,5,16,18,5,22,18,5,24,18,9,15,18,15,2,18,15,4,18,15,14,18,15,25,18,20,5,19,1,12,19,1,13,19,1,14,19,1,20,19,5,3,19,5,14,19,5,20,19,7,20,19,9,4,19,15,12,19,15,14,19,20,21,19,21,5,19,21,9,19,21,14,20,23,1,20,1,4,20,1,15,20,5,4,20,5,20,20,5,24,20,9,1,20,9,13,20,15,4,20,15,13,20,21,20,21,6,1,21,20,5,21,26,9,22,1,12,22,1,14,22,9,3,23,1,3,23,5,4,23,5,9,23,9,19,23,25,15,26,5,14,26,15,5,1,3,5,1,3,20,1,4,4,1,4,15,1,4,19,1,4,26,1,6,20,1,7,5,1,7,15,1,8,1,1,9,4,1,9,12,1,9,13,1,9,18,1,12,2,1,12,5,1,12,12,1,13,16,1,14,4,1,14,9,1,14,20,1,14,25,1,16,5,1,16,20,1,18,3,1,18,5,1,18,11,1,18,13,1,18,20,1,19,8,1,19,11,1,19,16,1,19,19,1,20,5,1,21,11,1,23,5,1,23,12,1,24,5,1,25,5,2,1,1,2,1,4,2,1,7,2,1,8,2,1,14,2,1,18,2,1,20,2,1,25,2,5,4,2,5,5,2,5,7,2,5,20,2,9,2,2,9,4,2,9,7,2,9,14,2,9,20,2,15,1,2,15,2,2,15,7,2,15,15,2,15,16,2,15,23,2,15,24,2,15,25,2,18,1,2,18,18,2,21,4,2,21,7,2,21,13,2,21,14,2,21,18,2,21,19,2,21,20,2,21,25,2,25,5,3,1,2,3,1,4,3,1,13,3,1,14,3,1,16,3,1,18,3,1,20,3,1,23,3,8,9,3,15,2,3,15,4,3,15,7,3,15,14,3,15,15,3,15,16,3,15,20,3,15,23,3,15,24,3,15,25,3,18,25,3,21,2,3,21,4,3,21,5,3,21,16,3,21,18,3,21,20,4,1,2,4,1,4,4,1,13,4,1,25,4,5,2,4,5,14,4,5,23,4,9,4,4,9,5,4,9,7,4,9,13,4,9,14,4,9,16,4,9,19,4,15,3,4,15,5,4,15,7,4,15,14,4,15,19,4,15,20,4,18,25,4,21,2,4,21,4,4,21,5,4,21,7,4,21,8,4,21,14,4,21,15,4,25,5,5,1,18,5,1,20,5,2,2,5,5,12,5,7,7,5,7,15,5,11,5,5,12,6,5,12,11,5,12,12,5,12,13,5,13,19,5,13,21,5,14,4,5,15,14,5,18,1,5,18,5,5,18,7,5,18,18,5,20,1,5,22,5,5,23,5,5,25,5,6,1,4,6,1,7,6,1,14,6,1,18,6,1,20,6,1,24,6,5,4,6,5,5,6,5,14,6,5,18,6,5,23,6,5,25,6,5,26,6,9,2,6,9,5,6,9,7,6,9,14,6,9,18,6,9,20,6,9,24,6,12,21,6,12,25,6,15,2,6,15,5,6,15,7,6,15,16,6,15,18,6,15,24,6,18,15,6,18,25,6,21,14,6,21,18,7,1,2,7,1,4,7,1,7,7,1,12,7,1,16,7,1,19,7,1,25,7,5,5,7,5,12,7,5,13,7,5,20,7,9,7,7,9,14,7,14,21,7,15,2,7,15,4,7,15,15,7,15,19,7,15,20,7,21,13,7,21,14,7,21,20,7,21,25,7,25,13,7,25,16,8,1,4,8,1,7,8,1,8,8,1,13,8,1,19,8,1,20,8,1,23,8,1,25,8,5,13,8,5,14,8,5,16,8,5,18,8,5,19,8,5,23,8,5,24,8,5,25,8,9,4,8,9,5,8,9,13,8,9,16,8,9,19,8,9,20,8,15,2,8,15,4,8,15,5,8,15,7,8,15,16,8,15,19,8,15,20,8,15,23,8,21,2,8,21,5,8,21,7,8,21,8,8,21,13,8,21,20,9,3,5,9,3,25,9,4,19,9,6,19,9,12,11,9,12,12,9,13,16,9,14,11,9,14,14,9,14,19,9,15,14,9,18,5,9,18,11,9,19,13,9,20,19,9,22,25,10,1,2,10,1,7,10,1,13,10,1,18,10,1,23,10,1,25,10,5,20,10,9,2,10,9,7,10,15,2,10,15,7,10,15,20,10,15,25,10,21,7,10,21,20,11,8,26,11,5,7,11,5,14,11,5,25,11,9,4,11,9,14,11,9,20,12,1,2,12,1,4,12,1,7,12,1,13,12,1,16,12,1,23,12,1,24,12,1,25,12,5,1,12,5,4,12,5,5,12,5,7,12,5,9,12,5,19,12,5,20,12,9,2,12,9,4,12,9,5,12,9,16,12,9,20,12,15,2,12,15,7,12,15,16,12,15,20,12,15,23,12,15,24,12,21,7,12,25,5,13,1,4,13,1,14,13,1,16,13,1,18,13,1,19,13,1,20,13,1,23,13,1,25,13,5,7,13,5,14,13,5,19,13,5,20,13,5,23,13,9,4,13,9,12,13,9,24,13,15,2,13,15,4,13,15,13,13,15,15,13,15,16,13,15,23,13,21,4,13,21,7,13,21,13,13,25,19,14,1,2,14,1,7,14,1,16,14,1,25,14,5,20,14,5,23,14,9,2,14,9,12,14,9,16,14,9,20,14,9,24,14,15,4,14,15,14,14,15,18,14,15,20,14,15,23,14,20,8,14,21,2,14,21,14,14,21,20,15,1,6,15,1,11,15,1,18,15,1,20,15,4,4,15,4,5,15,6,6,15,6,20,15,8,13,15,8,15,15,8,19,15,9,12,15,12,4,15,14,5,15,16,20,15,18,2,15,18,5,15,21,18,15,21,20,15,22,1,15,23,5,15,23,12,15,23,14,16,1,4,16,1,12,16,1,14,16,1,16,16,1,18,16,1,19,16,1,20,16,1,23,16,1,25,16,5,1,16,5,5,16,5,7,16,5,14,16,5,16,16,5,18,16,5,20,16,5,23,16,9,5,16,9,7,16,9,14,16,9,16,16,9,19,16,9,20,16,12,25,16,15,4,16,15,9,16,15,12,16,15,16,16,15,20,16,15,24,16,18,15,16,18,25,16,21,2,16,21,7,16,21,14,16,21,16,16,21,19,16,21,20,16,25,24,17,21,1,18,1,7,18,1,13,18,1,14,18,1,16,18,1,20,18,1,23,18,1,25,18,5,4,18,5,6,18,5,16,18,5,22,18,8,15,18,9,2,18,9,4,18,9,7,18,9,13,18,9,16,18,15,2,18,15,4,18,15,5,18,15,20,18,15,23,18,21,2,18,21,5,18,21,7,18,21,13,18,21,14,18,21,20,18,25,5,19,1,3,19,1,4,19,1,7,19,1,16,19,1,20,19,1,23,19,1,24,19,1,25,19,5,1,19,5,5,19,5,20,19,5,23,19,5,24,19,8,5,19,8,25,19,9,3,19,9,14,19,9,16,19,9,18,19,9,19,19,9,20,19,9,24,19,11,9,19,11,25,19,12,25,19,15,2,19,15,4,19,15,12,19,15,14,19,15,16,19,15,20,19,15,23,19,15,24,19,15,25,19,16,1,19,16,25,19,20,25,19,21,2,19,21,5,19,21,13,19,21,14,19,21,16,20,1,2,20,1,4,20,1,7,20,1,13,20,1,14,20,1,16,20,1,18,20,1,20,20,1,24,20,5,1,20,5,5,20,5,14,20,8,5,20,8,15,20,8,25,20,9,3,20,9,5,20,9,14,20,9,16,20,9,20,20,15,5,20,15,7,20,15,13,20,15,14,20,15,15,20,15,16,20,15,18,20,15,20,20,15,23,20,15,25,20,18,25,20,21,2,20,21,7,20,21,14,20,21,24,20,23,15,21,7,8,21,13,16,21,16,19,21,18,14,21,19,5,22,1,14,22,1,20,22,5,20,22,5,24,22,9,1,22,9,5,22,9,13,22,15,23,23,1,4,23,1,7,23,1,14,23,1,18,23,1,19,23,1,24,23,1,25,23,5,2,23,5,4,23,5,5,23,5,14,23,5,20,23,8,15,23,8,25,23,9,7,23,9,14,23,9,20,23,15,5,23,15,11,23,15,14,23,15,15,23,15,20,23,15,23,23,18,25,25,1,11,25,1,13,25,1,16,25,1,23,25,5,1,25,5,14,25,5,16,25,5,19,25,5,20,25,5,23,25,9,16,25,15,14,25,15,21,25,21,11,25,21,13,25,21,16,26,1,16,26,5,4,26,9,16,26,9,20,26,15,15];
array [1..366] of int: words2 = [1,3,1,7,1,12,1,13,1,18,1,19,1,20,1,21,1,22,2,1,2,5,2,9,2,11,2,18,3,1,3,4,3,6,3,9,3,12,3,13,3,15,3,18,3,19,3,21,4,9,4,18,5,4,5,18,5,19,5,21,6,5,6,13,6,18,7,5,7,1,7,4,7,5,8,5,8,6,8,7,8,15,8,26,9,14,9,15,9,18,9,20,10,15,10,18,11,18,12,1,12,5,12,9,12,14,12,18,12,20,12,21,13,2,13,4,13,7,13,14,13,15,13,18,13,19,13,20,14,1,14,2,14,4,14,5,14,9,14,16,15,11,15,2,15,19,15,26,16,1,16,2,16,4,16,12,16,13,16,15,16,20,16,21,18,1,18,2,18,4,18,5,18,8,18,14,18,21,18,24,19,2,19,3,19,5,19,9,19,13,19,14,19,17,19,18,19,20,20,1,20,2,20,3,20,8,20,9,20,12,20,13,20,25,21,18,22,1,23,13,23,21,24,5,25,2,26,14,26,18,1,4,1,8,1,13,1,14,1,19,1,20,1,24,1,25,2,5,2,25,3,19,4,2,4,15,5,8,5,13,5,19,5,24,6,1,7,15,7,19,8,1,8,5,8,9,8,15,9,4,9,6,9,14,9,19,9,20,11,23,11,3,11,19,12,1,12,15,12,19,13,1,13,5,13,9,13,19,13,21,13,25,14,15,14,21,15,6,15,8,15,14,15,18,15,23,15,24,16,8,16,1,16,9,18,5,18,19,19,8,19,15,20,9,20,15,20,19,21,8,21,13,21,16,21,19,22,19,23,5,25,1,25,5,25,15];
array [1..2] of int: X_INTRODUCED_15 = [1,-1];
var 1..26: X_INTRODUCED_1;
var 1..26: X_INTRODUCED_2;
var 1..26: X_INTRODUCED_3;
var 1..26: X_INTRODUCED_4;
var 1..26: X_INTRODUCED_5;
var 1..26: X_INTRODUCED_6;
var 1..26: X_INTRODUCED_7;
var 1..26: X_INTRODUCED_8;
var bool: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
array [1..9] of var int: L:: output_array([0..8]) = [1,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
array [1..3] of var int: X_INTRODUCED_9 ::var_is_introduced  = [X_INTRODUCED_2,X_INTRODUCED_5,X_INTRODUCED_8];
array [1..3] of var int: X_INTRODUCED_10 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_4,X_INTRODUCED_7];
array [1..2] of var int: X_INTRODUCED_11 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_6];
array [1..3] of var int: X_INTRODUCED_12 ::var_is_introduced  = [X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8];
array [1..3] of var int: X_INTRODUCED_13 ::var_is_introduced  = [X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5];
array [1..2] of var int: X_INTRODUCED_14 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2];
constraint table_int(X_INTRODUCED_9,words3);
constraint table_int(X_INTRODUCED_10,words3);
constraint table_int(X_INTRODUCED_11,words2);
constraint table_int(X_INTRODUCED_12,words3);
constraint table_int(X_INTRODUCED_13,words3);
constraint table_int(X_INTRODUCED_14,words2);
constraint array_bool_or([X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18],true);
constraint array_bool_or([X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21],true);
constraint array_bool_or([X_INTRODUCED_16,X_INTRODUCED_22],true);
constraint array_bool_or([X_INTRODUCED_17,X_INTRODUCED_23],true);
constraint array_bool_or([X_INTRODUCED_21,X_INTRODUCED_24,X_INTRODUCED_25],true);
constraint array_bool_or([X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28],true);
constraint array_bool_or([X_INTRODUCED_29,X_INTRODUCED_30],true);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_32],true);
constraint array_bool_or([X_INTRODUCED_28,X_INTRODUCED_33,X_INTRODUCED_34],true);
constraint array_bool_or([X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37],true);
constraint array_bool_or([X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40],true);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_42],true);
constraint array_bool_or([X_INTRODUCED_23,X_INTRODUCED_31,X_INTRODUCED_43],true);
constraint array_bool_or([X_INTRODUCED_21,X_INTRODUCED_33,X_INTRODUCED_44],true);
constraint array_bool_or([X_INTRODUCED_24,X_INTRODUCED_34,X_INTRODUCED_45],true);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_1,X_INTRODUCED_3],0,X_INTRODUCED_16):: defines_var(X_INTRODUCED_16);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_2,X_INTRODUCED_4],0,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint int_lin_ne_reif([-1],[X_INTRODUCED_5],-1,X_INTRODUCED_18):: defines_var(X_INTRODUCED_18);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_1,X_INTRODUCED_6],0,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_2,X_INTRODUCED_7],0,X_INTRODUCED_20):: defines_var(X_INTRODUCED_20);
constraint int_lin_ne_reif([-1],[X_INTRODUCED_8],-1,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_2,X_INTRODUCED_6],0,X_INTRODUCED_22):: defines_var(X_INTRODUCED_22);
constraint int_lin_ne_reif([-1],[X_INTRODUCED_7],-1,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_1,X_INTRODUCED_2],0,X_INTRODUCED_24):: defines_var(X_INTRODUCED_24);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_2,X_INTRODUCED_5],0,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_3,X_INTRODUCED_6],0,X_INTRODUCED_26):: defines_var(X_INTRODUCED_26);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_4,X_INTRODUCED_7],0,X_INTRODUCED_27):: defines_var(X_INTRODUCED_27);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_5,X_INTRODUCED_8],0,X_INTRODUCED_28):: defines_var(X_INTRODUCED_28);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_4,X_INTRODUCED_6],0,X_INTRODUCED_29):: defines_var(X_INTRODUCED_29);
constraint int_lin_ne_reif([1],[X_INTRODUCED_5],1,X_INTRODUCED_30):: defines_var(X_INTRODUCED_30);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_3,X_INTRODUCED_1],0,X_INTRODUCED_31):: defines_var(X_INTRODUCED_31);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_5,X_INTRODUCED_7],0,X_INTRODUCED_32):: defines_var(X_INTRODUCED_32);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_3,X_INTRODUCED_2],0,X_INTRODUCED_33):: defines_var(X_INTRODUCED_33);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_4,X_INTRODUCED_5],0,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_6,X_INTRODUCED_3],0,X_INTRODUCED_35):: defines_var(X_INTRODUCED_35);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_7,X_INTRODUCED_6],0,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_lin_ne_reif([1],[X_INTRODUCED_8],1,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_6,X_INTRODUCED_1],0,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_7,X_INTRODUCED_4],0,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_8,X_INTRODUCED_7],0,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_6,X_INTRODUCED_2],0,X_INTRODUCED_41):: defines_var(X_INTRODUCED_41);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_7,X_INTRODUCED_5],0,X_INTRODUCED_42):: defines_var(X_INTRODUCED_42);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_6,X_INTRODUCED_4],0,X_INTRODUCED_43):: defines_var(X_INTRODUCED_43);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_6,X_INTRODUCED_5],0,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_ne_reif(X_INTRODUCED_15,[X_INTRODUCED_7,X_INTRODUCED_8],0,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
solve :: int_search(L,first_fail,indomain_min,complete) satisfy;
