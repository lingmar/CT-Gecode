%
% Crossword problem 'puzzle17, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 66 1` ).
%
% This crossword model was 
%
% This is problem 'puzzle17, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (66): puzzle17, 15 x 15
% 
%   _ _ _ * _ _ _ * _ _ _ * _ _ _
%   _ _ _ * _ _ _ * _ _ _ * _ _ _
%   _ _ _ _ _ _ _ * _ _ _ _ _ _ _
%   * * _ _ _ _ * _ _ _ _ _ _ * *
%   _ _ _ _ _ * _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ * _ _ _ * _ _ _
%   * * * _ _ _ * * * _ _ _ * * *
%   _ _ _ * _ _ _ * _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ * _ _ _ _ _
%   * * _ _ _ _ _ _ * _ _ _ _ * *
%   _ _ _ _ _ _ _ * _ _ _ _ _ _ _
%   _ _ _ * _ _ _ * _ _ _ * _ _ _
%   _ _ _ * _ _ _ * _ _ _ * _ _ _

include "crossword3.mzn"; 

problem_name = "puzzle17, 15 x 15";


% number of letters to assign
N = 180;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3]], words3) 
/\ table([L[4], L[5], L[6]], words3) 
/\ table([L[7], L[8], L[9]], words3) 
/\ table([L[10], L[11], L[12]], words3) 
/\ table([L[13], L[14], L[15]], words3) 
/\ table([L[16], L[17], L[18]], words3) 
/\ table([L[19], L[20], L[21]], words3) 
/\ table([L[22], L[23], L[24]], words3) 
/\ table([L[25], L[26], L[27], L[28], L[29], L[30], L[31]], words7) 
/\ table([L[32], L[33], L[34], L[35], L[36], L[37], L[38]], words7) 
/\ table([L[39], L[40], L[41], L[42]], words4) 
/\ table([L[43], L[44], L[45], L[46], L[47], L[48]], words6) 
/\ table([L[49], L[50], L[51], L[52], L[53]], words5) 
/\ table([L[54], L[55], L[56]], words3) 
/\ table([L[57], L[58], L[59], L[60], L[61]], words5) 
/\ table([L[62], L[63], L[64], L[65]], words4) 
/\ table([L[66], L[67], L[68], L[69], L[70]], words5) 
/\ table([L[71], L[72], L[73], L[74]], words4) 
/\ table([L[75], L[76], L[77], L[78], L[79], L[80], L[81]], words7) 
/\ table([L[82], L[83], L[84]], words3) 
/\ table([L[85], L[86], L[87]], words3) 
/\ table([L[88], L[89], L[90]], words3) 
/\ table([L[91], L[92], L[93]], words3) 
/\ table([L[94], L[95], L[96]], words3) 
/\ table([L[97], L[98], L[99]], words3) 
/\ table([L[100], L[101], L[102], L[103], L[104], L[105], L[106]], words7) 
/\ table([L[107], L[108], L[109], L[110]], words4) 
/\ table([L[111], L[112], L[113], L[114], L[115]], words5) 
/\ table([L[116], L[117], L[118], L[119]], words4) 
/\ table([L[120], L[121], L[122], L[123], L[124]], words5) 
/\ table([L[125], L[126], L[127]], words3) 
/\ table([L[128], L[129], L[130], L[131], L[132]], words5) 
/\ table([L[133], L[134], L[135], L[136], L[137], L[138]], words6) 
/\ table([L[139], L[140], L[141], L[142]], words4) 
/\ table([L[143], L[144], L[145], L[146], L[147], L[148], L[149]], words7) 
/\ table([L[150], L[151], L[152], L[153], L[154], L[155], L[156]], words7) 
/\ table([L[157], L[158], L[159]], words3) 
/\ table([L[160], L[161], L[162]], words3) 
/\ table([L[163], L[164], L[165]], words3) 
/\ table([L[166], L[167], L[168]], words3) 
/\ table([L[169], L[170], L[171]], words3) 
/\ table([L[172], L[173], L[174]], words3) 
/\ table([L[175], L[176], L[177]], words3) 
/\ table([L[178], L[179], L[180]], words3) 
/\ table([L[1], L[13], L[25]], words3) 
/\ table([L[49], L[62], L[75]], words3) 
/\ table([L[94], L[107], L[120]], words3) 
/\ table([L[143], L[157], L[169]], words3) 
/\ table([L[2], L[14], L[26]], words3) 
/\ table([L[50], L[63], L[76]], words3) 
/\ table([L[95], L[108], L[121]], words3) 
/\ table([L[144], L[158], L[170]], words3) 
/\ table([L[3], L[15], L[27], L[39], L[51], L[64], L[77]], words7) 
/\ table([L[96], L[109], L[122], L[133], L[145], L[159], L[171]], words7) 
/\ table([L[28], L[40], L[52], L[65], L[78], L[88]], words6) 
/\ table([L[110], L[123], L[134], L[146]], words4) 
/\ table([L[4], L[16], L[29], L[41], L[53]], words5) 
/\ table([L[79], L[89], L[97]], words3) 
/\ table([L[124], L[135], L[147], L[160], L[172]], words5) 
/\ table([L[5], L[17], L[30], L[42]], words4) 
/\ table([L[66], L[80], L[90], L[98], L[111]], words5) 
/\ table([L[136], L[148], L[161], L[173]], words4) 
/\ table([L[6], L[18], L[31]], words3) 
/\ table([L[54], L[67], L[81]], words3) 
/\ table([L[99], L[112], L[125], L[137], L[149], L[162], L[174]], words7) 
/\ table([L[43], L[55], L[68]], words3) 
/\ table([L[113], L[126], L[138]], words3) 
/\ table([L[7], L[19], L[32], L[44], L[56], L[69], L[82]], words7) 
/\ table([L[100], L[114], L[127]], words3) 
/\ table([L[150], L[163], L[175]], words3) 
/\ table([L[8], L[20], L[33], L[45]], words4) 
/\ table([L[70], L[83], L[91], L[101], L[115]], words5) 
/\ table([L[139], L[151], L[164], L[176]], words4) 
/\ table([L[9], L[21], L[34], L[46], L[57]], words5) 
/\ table([L[84], L[92], L[102]], words3) 
/\ table([L[128], L[140], L[152], L[165], L[177]], words5) 
/\ table([L[35], L[47], L[58], L[71]], words4) 
/\ table([L[93], L[103], L[116], L[129], L[141], L[153]], words6) 
/\ table([L[10], L[22], L[36], L[48], L[59], L[72], L[85]], words7) 
/\ table([L[104], L[117], L[130], L[142], L[154], L[166], L[178]], words7) 
/\ table([L[11], L[23], L[37]], words3) 
/\ table([L[60], L[73], L[86]], words3) 
/\ table([L[105], L[118], L[131]], words3) 
/\ table([L[155], L[167], L[179]], words3) 
/\ table([L[12], L[24], L[38]], words3) 
/\ table([L[61], L[74], L[87]], words3) 
/\ table([L[106], L[119], L[132]], words3) 
/\ table([L[156], L[168], L[180]], words3)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 88;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,
4,5,6,0,0,0,0,0,0,0,0,0,0,0,0,
7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,
10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,
13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,
16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,
19,20,21,0,0,0,0,0,0,0,0,0,0,0,0,
22,23,24,0,0,0,0,0,0,0,0,0,0,0,0,
25,26,27,28,29,30,31,0,0,0,0,0,0,0,0,
32,33,34,35,36,37,38,0,0,0,0,0,0,0,0,
39,40,41,42,0,0,0,0,0,0,0,0,0,0,0,
43,44,45,46,47,48,0,0,0,0,0,0,0,0,0,
49,50,51,52,53,0,0,0,0,0,0,0,0,0,0,
54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,
57,58,59,60,61,0,0,0,0,0,0,0,0,0,0,
62,63,64,65,0,0,0,0,0,0,0,0,0,0,0,
66,67,68,69,70,0,0,0,0,0,0,0,0,0,0,
71,72,73,74,0,0,0,0,0,0,0,0,0,0,0,
75,76,77,78,79,80,81,0,0,0,0,0,0,0,0,
82,83,84,0,0,0,0,0,0,0,0,0,0,0,0,
85,86,87,0,0,0,0,0,0,0,0,0,0,0,0,
88,89,90,0,0,0,0,0,0,0,0,0,0,0,0,
91,92,93,0,0,0,0,0,0,0,0,0,0,0,0,
94,95,96,0,0,0,0,0,0,0,0,0,0,0,0,
97,98,99,0,0,0,0,0,0,0,0,0,0,0,0,
100,101,102,103,104,105,106,0,0,0,0,0,0,0,0,
107,108,109,110,0,0,0,0,0,0,0,0,0,0,0,
111,112,113,114,115,0,0,0,0,0,0,0,0,0,0,
116,117,118,119,0,0,0,0,0,0,0,0,0,0,0,
120,121,122,123,124,0,0,0,0,0,0,0,0,0,0,
125,126,127,0,0,0,0,0,0,0,0,0,0,0,0,
128,129,130,131,132,0,0,0,0,0,0,0,0,0,0,
133,134,135,136,137,138,0,0,0,0,0,0,0,0,0,
139,140,141,142,0,0,0,0,0,0,0,0,0,0,0,
143,144,145,146,147,148,149,0,0,0,0,0,0,0,0,
150,151,152,153,154,155,156,0,0,0,0,0,0,0,0,
157,158,159,0,0,0,0,0,0,0,0,0,0,0,0,
160,161,162,0,0,0,0,0,0,0,0,0,0,0,0,
163,164,165,0,0,0,0,0,0,0,0,0,0,0,0,
166,167,168,0,0,0,0,0,0,0,0,0,0,0,0,
169,170,171,0,0,0,0,0,0,0,0,0,0,0,0,
172,173,174,0,0,0,0,0,0,0,0,0,0,0,0,
175,176,177,0,0,0,0,0,0,0,0,0,0,0,0,
178,179,180,0,0,0,0,0,0,0,0,0,0,0,0,
1,13,25,0,0,0,0,0,0,0,0,0,0,0,0,
49,62,75,0,0,0,0,0,0,0,0,0,0,0,0,
94,107,120,0,0,0,0,0,0,0,0,0,0,0,0,
143,157,169,0,0,0,0,0,0,0,0,0,0,0,0,
2,14,26,0,0,0,0,0,0,0,0,0,0,0,0,
50,63,76,0,0,0,0,0,0,0,0,0,0,0,0,
95,108,121,0,0,0,0,0,0,0,0,0,0,0,0,
144,158,170,0,0,0,0,0,0,0,0,0,0,0,0,
3,15,27,39,51,64,77,0,0,0,0,0,0,0,0,
96,109,122,133,145,159,171,0,0,0,0,0,0,0,0,
28,40,52,65,78,88,0,0,0,0,0,0,0,0,0,
110,123,134,146,0,0,0,0,0,0,0,0,0,0,0,
4,16,29,41,53,0,0,0,0,0,0,0,0,0,0,
79,89,97,0,0,0,0,0,0,0,0,0,0,0,0,
124,135,147,160,172,0,0,0,0,0,0,0,0,0,0,
5,17,30,42,0,0,0,0,0,0,0,0,0,0,0,
66,80,90,98,111,0,0,0,0,0,0,0,0,0,0,
136,148,161,173,0,0,0,0,0,0,0,0,0,0,0,
6,18,31,0,0,0,0,0,0,0,0,0,0,0,0,
54,67,81,0,0,0,0,0,0,0,0,0,0,0,0,
99,112,125,137,149,162,174,0,0,0,0,0,0,0,0,
43,55,68,0,0,0,0,0,0,0,0,0,0,0,0,
113,126,138,0,0,0,0,0,0,0,0,0,0,0,0,
7,19,32,44,56,69,82,0,0,0,0,0,0,0,0,
100,114,127,0,0,0,0,0,0,0,0,0,0,0,0,
150,163,175,0,0,0,0,0,0,0,0,0,0,0,0,
8,20,33,45,0,0,0,0,0,0,0,0,0,0,0,
70,83,91,101,115,0,0,0,0,0,0,0,0,0,0,
139,151,164,176,0,0,0,0,0,0,0,0,0,0,0,
9,21,34,46,57,0,0,0,0,0,0,0,0,0,0,
84,92,102,0,0,0,0,0,0,0,0,0,0,0,0,
128,140,152,165,177,0,0,0,0,0,0,0,0,0,0,
35,47,58,71,0,0,0,0,0,0,0,0,0,0,0,
93,103,116,129,141,153,0,0,0,0,0,0,0,0,0,
10,22,36,48,59,72,85,0,0,0,0,0,0,0,0,
104,117,130,142,154,166,178,0,0,0,0,0,0,0,0,
11,23,37,0,0,0,0,0,0,0,0,0,0,0,0,
60,73,86,0,0,0,0,0,0,0,0,0,0,0,0,
105,118,131,0,0,0,0,0,0,0,0,0,0,0,0,
155,167,179,0,0,0,0,0,0,0,0,0,0,0,0,
12,24,38,0,0,0,0,0,0,0,0,0,0,0,0,
61,74,87,0,0,0,0,0,0,0,0,0,0,0,0,
106,119,132,0,0,0,0,0,0,0,0,0,0,0,0,
156,168,180,0,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 0, 4, 5, 6, 0, 7, 8, 9, 0, 10, 11, 12, 
13, 14, 15, 0, 16, 17, 18, 0, 19, 20, 21, 0, 22, 23, 24, 
25, 26, 27, 28, 29, 30, 31, 0, 32, 33, 34, 35, 36, 37, 38, 
0, 0, 39, 40, 41, 42, 0, 43, 44, 45, 46, 47, 48, 0, 0, 
49, 50, 51, 52, 53, 0, 54, 55, 56, 0, 57, 58, 59, 60, 61, 
62, 63, 64, 65, 0, 66, 67, 68, 69, 70, 0, 71, 72, 73, 74, 
75, 76, 77, 78, 79, 80, 81, 0, 82, 83, 84, 0, 85, 86, 87, 
0, 0, 0, 88, 89, 90, 0, 0, 0, 91, 92, 93, 0, 0, 0, 
94, 95, 96, 0, 97, 98, 99, 0, 100, 101, 102, 103, 104, 105, 106, 
107, 108, 109, 110, 0, 111, 112, 113, 114, 115, 0, 116, 117, 118, 119, 
120, 121, 122, 123, 124, 0, 125, 126, 127, 0, 128, 129, 130, 131, 132, 
0, 0, 133, 134, 135, 136, 137, 138, 0, 139, 140, 141, 142, 0, 0, 
143, 144, 145, 146, 147, 148, 149, 0, 150, 151, 152, 153, 154, 155, 156, 
157, 158, 159, 0, 160, 161, 162, 0, 163, 164, 165, 0, 166, 167, 168, 
169, 170, 171, 0, 172, 173, 174, 0, 175, 176, 177, 0, 178, 179, 180, 

]);


