%
% Crossword problem 'puzzle18, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 67 1` ).
%
% This crossword model was 
%
% This is problem 'puzzle18, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (67): puzzle18, 15 x 15
% 
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ * * _ _ _ _
%   * * * * _ _ _ * * _ _ _ * * *
%   _ _ _ * _ _ _ * _ _ _ * _ _ _
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ * * _ _ _ * * _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   _ _ _ * _ _ _ * _ _ _ * _ _ _
%   * * * _ _ _ * * _ _ _ * * * *
%   _ _ _ _ * * _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _
%   _ _ _ _ * _ _ _ _ _ * _ _ _ _

include "crossword3.mzn"; 

problem_name = "puzzle18, 15 x 15";


% number of letters to assign
N = 177;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4]], words4) 
/\ table([L[5], L[6], L[7], L[8], L[9]], words5) 
/\ table([L[10], L[11], L[12], L[13]], words4) 
/\ table([L[14], L[15], L[16], L[17]], words4) 
/\ table([L[18], L[19], L[20], L[21], L[22]], words5) 
/\ table([L[23], L[24], L[25], L[26]], words4) 
/\ table([L[27], L[28], L[29], L[30]], words4) 
/\ table([L[31], L[32], L[33], L[34], L[35]], words5) 
/\ table([L[36], L[37], L[38], L[39]], words4) 
/\ table([L[40], L[41], L[42], L[43], L[44]], words5) 
/\ table([L[45], L[46], L[47]], words3) 
/\ table([L[48], L[49], L[50], L[51]], words4) 
/\ table([L[52], L[53], L[54]], words3) 
/\ table([L[55], L[56], L[57]], words3) 
/\ table([L[58], L[59], L[60]], words3) 
/\ table([L[61], L[62], L[63]], words3) 
/\ table([L[64], L[65], L[66]], words3) 
/\ table([L[67], L[68], L[69]], words3) 
/\ table([L[70], L[71], L[72], L[73]], words4) 
/\ table([L[74], L[75], L[76], L[77], L[78], L[79], L[80], L[81], L[82], L[83]], words10) 
/\ table([L[84], L[85], L[86], L[87]], words4) 
/\ table([L[88], L[89], L[90]], words3) 
/\ table([L[91], L[92], L[93], L[94]], words4) 
/\ table([L[95], L[96], L[97], L[98], L[99], L[100], L[101], L[102], L[103], L[104]], words10) 
/\ table([L[105], L[106], L[107], L[108]], words4) 
/\ table([L[109], L[110], L[111]], words3) 
/\ table([L[112], L[113], L[114]], words3) 
/\ table([L[115], L[116], L[117]], words3) 
/\ table([L[118], L[119], L[120]], words3) 
/\ table([L[121], L[122], L[123]], words3) 
/\ table([L[124], L[125], L[126]], words3) 
/\ table([L[127], L[128], L[129], L[130]], words4) 
/\ table([L[131], L[132], L[133]], words3) 
/\ table([L[134], L[135], L[136], L[137], L[138]], words5) 
/\ table([L[139], L[140], L[141], L[142]], words4) 
/\ table([L[143], L[144], L[145], L[146], L[147]], words5) 
/\ table([L[148], L[149], L[150], L[151]], words4) 
/\ table([L[152], L[153], L[154], L[155]], words4) 
/\ table([L[156], L[157], L[158], L[159], L[160]], words5) 
/\ table([L[161], L[162], L[163], L[164]], words4) 
/\ table([L[165], L[166], L[167], L[168]], words4) 
/\ table([L[169], L[170], L[171], L[172], L[173]], words5) 
/\ table([L[174], L[175], L[176], L[177]], words4) 
/\ table([L[1], L[14], L[27], L[40]], words4) 
/\ table([L[58], L[70], L[84], L[95], L[109]], words5) 
/\ table([L[127], L[139], L[152], L[165]], words4) 
/\ table([L[2], L[15], L[28], L[41]], words4) 
/\ table([L[59], L[71], L[85], L[96], L[110]], words5) 
/\ table([L[128], L[140], L[153], L[166]], words4) 
/\ table([L[3], L[16], L[29], L[42]], words4) 
/\ table([L[60], L[72], L[86], L[97], L[111]], words5) 
/\ table([L[129], L[141], L[154], L[167]], words4) 
/\ table([L[4], L[17], L[30], L[43]], words4) 
/\ table([L[73], L[87], L[98]], words3) 
/\ table([L[121], L[130], L[142], L[155], L[168]], words5) 
/\ table([L[44], L[52], L[61]], words3) 
/\ table([L[99], L[112], L[122]], words3) 
/\ table([L[5], L[18], L[31]], words3) 
/\ table([L[53], L[62], L[74]], words3) 
/\ table([L[100], L[113], L[123]], words3) 
/\ table([L[143], L[156], L[169]], words3) 
/\ table([L[6], L[19], L[32], L[45], L[54], L[63], L[75], L[88], L[101], L[114]], words10) 
/\ table([L[131], L[144], L[157], L[170]], words4) 
/\ table([L[7], L[20], L[33], L[46]], words4) 
/\ table([L[76], L[89], L[102]], words3) 
/\ table([L[132], L[145], L[158], L[171]], words4) 
/\ table([L[8], L[21], L[34], L[47]], words4) 
/\ table([L[64], L[77], L[90], L[103], L[115], L[124], L[133], L[146], L[159], L[172]], words10) 
/\ table([L[9], L[22], L[35]], words3) 
/\ table([L[55], L[65], L[78]], words3) 
/\ table([L[104], L[116], L[125]], words3) 
/\ table([L[147], L[160], L[173]], words3) 
/\ table([L[56], L[66], L[79]], words3) 
/\ table([L[117], L[126], L[134]], words3) 
/\ table([L[10], L[23], L[36], L[48], L[57]], words5) 
/\ table([L[80], L[91], L[105]], words3) 
/\ table([L[135], L[148], L[161], L[174]], words4) 
/\ table([L[11], L[24], L[37], L[49]], words4) 
/\ table([L[67], L[81], L[92], L[106], L[118]], words5) 
/\ table([L[136], L[149], L[162], L[175]], words4) 
/\ table([L[12], L[25], L[38], L[50]], words4) 
/\ table([L[68], L[82], L[93], L[107], L[119]], words5) 
/\ table([L[137], L[150], L[163], L[176]], words4) 
/\ table([L[13], L[26], L[39], L[51]], words4) 
/\ table([L[69], L[83], L[94], L[108], L[120]], words5) 
/\ table([L[138], L[151], L[164], L[177]], words4)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 86;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,
5,6,7,8,9,0,0,0,0,0,0,0,0,0,0,
10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,
14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,
18,19,20,21,22,0,0,0,0,0,0,0,0,0,0,
23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,
27,28,29,30,0,0,0,0,0,0,0,0,0,0,0,
31,32,33,34,35,0,0,0,0,0,0,0,0,0,0,
36,37,38,39,0,0,0,0,0,0,0,0,0,0,0,
40,41,42,43,44,0,0,0,0,0,0,0,0,0,0,
45,46,47,0,0,0,0,0,0,0,0,0,0,0,0,
48,49,50,51,0,0,0,0,0,0,0,0,0,0,0,
52,53,54,0,0,0,0,0,0,0,0,0,0,0,0,
55,56,57,0,0,0,0,0,0,0,0,0,0,0,0,
58,59,60,0,0,0,0,0,0,0,0,0,0,0,0,
61,62,63,0,0,0,0,0,0,0,0,0,0,0,0,
64,65,66,0,0,0,0,0,0,0,0,0,0,0,0,
67,68,69,0,0,0,0,0,0,0,0,0,0,0,0,
70,71,72,73,0,0,0,0,0,0,0,0,0,0,0,
74,75,76,77,78,79,80,81,82,83,0,0,0,0,0,
84,85,86,87,0,0,0,0,0,0,0,0,0,0,0,
88,89,90,0,0,0,0,0,0,0,0,0,0,0,0,
91,92,93,94,0,0,0,0,0,0,0,0,0,0,0,
95,96,97,98,99,100,101,102,103,104,0,0,0,0,0,
105,106,107,108,0,0,0,0,0,0,0,0,0,0,0,
109,110,111,0,0,0,0,0,0,0,0,0,0,0,0,
112,113,114,0,0,0,0,0,0,0,0,0,0,0,0,
115,116,117,0,0,0,0,0,0,0,0,0,0,0,0,
118,119,120,0,0,0,0,0,0,0,0,0,0,0,0,
121,122,123,0,0,0,0,0,0,0,0,0,0,0,0,
124,125,126,0,0,0,0,0,0,0,0,0,0,0,0,
127,128,129,130,0,0,0,0,0,0,0,0,0,0,0,
131,132,133,0,0,0,0,0,0,0,0,0,0,0,0,
134,135,136,137,138,0,0,0,0,0,0,0,0,0,0,
139,140,141,142,0,0,0,0,0,0,0,0,0,0,0,
143,144,145,146,147,0,0,0,0,0,0,0,0,0,0,
148,149,150,151,0,0,0,0,0,0,0,0,0,0,0,
152,153,154,155,0,0,0,0,0,0,0,0,0,0,0,
156,157,158,159,160,0,0,0,0,0,0,0,0,0,0,
161,162,163,164,0,0,0,0,0,0,0,0,0,0,0,
165,166,167,168,0,0,0,0,0,0,0,0,0,0,0,
169,170,171,172,173,0,0,0,0,0,0,0,0,0,0,
174,175,176,177,0,0,0,0,0,0,0,0,0,0,0,
1,14,27,40,0,0,0,0,0,0,0,0,0,0,0,
58,70,84,95,109,0,0,0,0,0,0,0,0,0,0,
127,139,152,165,0,0,0,0,0,0,0,0,0,0,0,
2,15,28,41,0,0,0,0,0,0,0,0,0,0,0,
59,71,85,96,110,0,0,0,0,0,0,0,0,0,0,
128,140,153,166,0,0,0,0,0,0,0,0,0,0,0,
3,16,29,42,0,0,0,0,0,0,0,0,0,0,0,
60,72,86,97,111,0,0,0,0,0,0,0,0,0,0,
129,141,154,167,0,0,0,0,0,0,0,0,0,0,0,
4,17,30,43,0,0,0,0,0,0,0,0,0,0,0,
73,87,98,0,0,0,0,0,0,0,0,0,0,0,0,
121,130,142,155,168,0,0,0,0,0,0,0,0,0,0,
44,52,61,0,0,0,0,0,0,0,0,0,0,0,0,
99,112,122,0,0,0,0,0,0,0,0,0,0,0,0,
5,18,31,0,0,0,0,0,0,0,0,0,0,0,0,
53,62,74,0,0,0,0,0,0,0,0,0,0,0,0,
100,113,123,0,0,0,0,0,0,0,0,0,0,0,0,
143,156,169,0,0,0,0,0,0,0,0,0,0,0,0,
6,19,32,45,54,63,75,88,101,114,0,0,0,0,0,
131,144,157,170,0,0,0,0,0,0,0,0,0,0,0,
7,20,33,46,0,0,0,0,0,0,0,0,0,0,0,
76,89,102,0,0,0,0,0,0,0,0,0,0,0,0,
132,145,158,171,0,0,0,0,0,0,0,0,0,0,0,
8,21,34,47,0,0,0,0,0,0,0,0,0,0,0,
64,77,90,103,115,124,133,146,159,172,0,0,0,0,0,
9,22,35,0,0,0,0,0,0,0,0,0,0,0,0,
55,65,78,0,0,0,0,0,0,0,0,0,0,0,0,
104,116,125,0,0,0,0,0,0,0,0,0,0,0,0,
147,160,173,0,0,0,0,0,0,0,0,0,0,0,0,
56,66,79,0,0,0,0,0,0,0,0,0,0,0,0,
117,126,134,0,0,0,0,0,0,0,0,0,0,0,0,
10,23,36,48,57,0,0,0,0,0,0,0,0,0,0,
80,91,105,0,0,0,0,0,0,0,0,0,0,0,0,
135,148,161,174,0,0,0,0,0,0,0,0,0,0,0,
11,24,37,49,0,0,0,0,0,0,0,0,0,0,0,
67,81,92,106,118,0,0,0,0,0,0,0,0,0,0,
136,149,162,175,0,0,0,0,0,0,0,0,0,0,0,
12,25,38,50,0,0,0,0,0,0,0,0,0,0,0,
68,82,93,107,119,0,0,0,0,0,0,0,0,0,0,
137,150,163,176,0,0,0,0,0,0,0,0,0,0,0,
13,26,39,51,0,0,0,0,0,0,0,0,0,0,0,
69,83,94,108,120,0,0,0,0,0,0,0,0,0,0,
138,151,164,177,0,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 
14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 0, 23, 24, 25, 26, 
27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 
40, 41, 42, 43, 44, 0, 45, 46, 47, 0, 0, 48, 49, 50, 51, 
0, 0, 0, 0, 52, 53, 54, 0, 0, 55, 56, 57, 0, 0, 0, 
58, 59, 60, 0, 61, 62, 63, 0, 64, 65, 66, 0, 67, 68, 69, 
70, 71, 72, 73, 0, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
84, 85, 86, 87, 0, 0, 88, 89, 90, 0, 0, 91, 92, 93, 94, 
95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 0, 105, 106, 107, 108, 
109, 110, 111, 0, 112, 113, 114, 0, 115, 116, 117, 0, 118, 119, 120, 
0, 0, 0, 121, 122, 123, 0, 0, 124, 125, 126, 0, 0, 0, 0, 
127, 128, 129, 130, 0, 0, 131, 132, 133, 0, 134, 135, 136, 137, 138, 
139, 140, 141, 142, 0, 143, 144, 145, 146, 147, 0, 148, 149, 150, 151, 
152, 153, 154, 155, 0, 156, 157, 158, 159, 160, 0, 161, 162, 163, 164, 
165, 166, 167, 168, 0, 169, 170, 171, 172, 173, 0, 174, 175, 176, 177, 

]);


