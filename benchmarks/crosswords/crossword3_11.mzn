%
% Crossword problem '15.02, 15 x 15' in MiniZinc.
%
% (generated Sat Sep 24 08:54:24 2011 by `make_crossword.pl 11 1` ).
%
% This crossword model was 
%
% This is problem '15.02, 15 x 15' from the Gecode crossword example:
%   http://www.gecode.org/doc-latest/reference/crossword_8cpp_source.html
% 
% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

%
% Gecode problem to solve (11): 15.02, 15 x 15
% 
%   _ _ _ _ _ * _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ * _ _ _ _ * _ _ _ * * *
%   * * * _ _ _ _ * _ _ _ * _ _ _
%   _ _ _ _ _ _ * _ _ _ * _ _ _ _
%   _ _ _ _ _ * _ _ _ * _ _ _ _ _
%   _ _ _ _ * _ _ _ * _ _ _ _ _ _
%   _ _ _ * _ _ _ * _ _ _ _ * * *
%   * * * _ _ _ * _ _ _ _ * _ _ _
%   _ _ _ _ _ _ _ _ _ _ * _ _ _ _
%   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ _ _ _ _ _ _
%   _ _ _ _ * _ _ _ _ * _ _ _ _ _

include "crossword3.mzn"; 

problem_name = "15.02, 15 x 15";


% number of letters to assign
N = 191;


% distinct words
require_distinct_words = 1;

constraint
  table([L[1], L[2], L[3], L[4], L[5]], words5) 
/\ table([L[6], L[7], L[8], L[9]], words4) 
/\ table([L[10], L[11], L[12], L[13]], words4) 
/\ table([L[14], L[15], L[16], L[17], L[18], L[19], L[20], L[21], L[22], L[23]], words10) 
/\ table([L[24], L[25], L[26], L[27]], words4) 
/\ table([L[28], L[29], L[30], L[31], L[32], L[33], L[34], L[35], L[36], L[37], L[38], L[39], L[40], L[41], L[42]], words15) 
/\ table([L[43], L[44], L[45], L[46]], words4) 
/\ table([L[47], L[48], L[49], L[50], L[51], L[52], L[53], L[54], L[55], L[56]], words10) 
/\ table([L[57], L[58], L[59]], words3) 
/\ table([L[60], L[61], L[62], L[63]], words4) 
/\ table([L[64], L[65], L[66]], words3) 
/\ table([L[67], L[68], L[69], L[70]], words4) 
/\ table([L[71], L[72], L[73]], words3) 
/\ table([L[74], L[75], L[76]], words3) 
/\ table([L[77], L[78], L[79], L[80], L[81], L[82]], words6) 
/\ table([L[83], L[84], L[85]], words3) 
/\ table([L[86], L[87], L[88], L[89]], words4) 
/\ table([L[90], L[91], L[92], L[93], L[94]], words5) 
/\ table([L[95], L[96], L[97]], words3) 
/\ table([L[98], L[99], L[100], L[101], L[102]], words5) 
/\ table([L[103], L[104], L[105], L[106]], words4) 
/\ table([L[107], L[108], L[109]], words3) 
/\ table([L[110], L[111], L[112], L[113], L[114], L[115]], words6) 
/\ table([L[116], L[117], L[118]], words3) 
/\ table([L[119], L[120], L[121]], words3) 
/\ table([L[122], L[123], L[124], L[125]], words4) 
/\ table([L[126], L[127], L[128]], words3) 
/\ table([L[129], L[130], L[131], L[132]], words4) 
/\ table([L[133], L[134], L[135]], words3) 
/\ table([L[136], L[137], L[138], L[139], L[140], L[141], L[142], L[143], L[144], L[145]], words10) 
/\ table([L[146], L[147], L[148], L[149]], words4) 
/\ table([L[150], L[151], L[152], L[153], L[154], L[155], L[156], L[157], L[158], L[159], L[160], L[161], L[162], L[163], L[164]], words15) 
/\ table([L[165], L[166], L[167], L[168]], words4) 
/\ table([L[169], L[170], L[171], L[172], L[173], L[174], L[175], L[176], L[177], L[178]], words10) 
/\ table([L[179], L[180], L[181], L[182]], words4) 
/\ table([L[183], L[184], L[185], L[186]], words4) 
/\ table([L[187], L[188], L[189], L[190], L[191]], words5) 
/\ table([L[1], L[14], L[28], L[43], L[57]], words5) 
/\ table([L[77], L[90], L[103], L[116]], words4) 
/\ table([L[136], L[150], L[165], L[179]], words4) 
/\ table([L[2], L[15], L[29], L[44], L[58]], words5) 
/\ table([L[78], L[91], L[104], L[117]], words4) 
/\ table([L[137], L[151], L[166], L[180]], words4) 
/\ table([L[3], L[16], L[30], L[45], L[59]], words5) 
/\ table([L[79], L[92], L[105], L[118]], words4) 
/\ table([L[138], L[152], L[167], L[181]], words4) 
/\ table([L[4], L[17], L[31], L[46]], words4) 
/\ table([L[67], L[80], L[93], L[106]], words4) 
/\ table([L[126], L[139], L[153], L[168], L[182]], words5) 
/\ table([L[5], L[18], L[32]], words3) 
/\ table([L[60], L[68], L[81], L[94]], words4) 
/\ table([L[119], L[127], L[140], L[154]], words4) 
/\ table([L[19], L[33], L[47], L[61], L[69], L[82]], words6) 
/\ table([L[107], L[120], L[128], L[141], L[155], L[169], L[183]], words7) 
/\ table([L[6], L[20], L[34], L[48], L[62], L[70]], words6) 
/\ table([L[95], L[108], L[121]], words3) 
/\ table([L[142], L[156], L[170], L[184]], words4) 
/\ table([L[7], L[21], L[35], L[49], L[63]], words5) 
/\ table([L[83], L[96], L[109]], words3) 
/\ table([L[129], L[143], L[157], L[171], L[185]], words5) 
/\ table([L[8], L[22], L[36], L[50]], words4) 
/\ table([L[71], L[84], L[97]], words3) 
/\ table([L[122], L[130], L[144], L[158], L[172], L[186]], words6) 
/\ table([L[9], L[23], L[37], L[51], L[64], L[72], L[85]], words7) 
/\ table([L[110], L[123], L[131], L[145], L[159], L[173]], words6) 
/\ table([L[38], L[52], L[65], L[73]], words4) 
/\ table([L[98], L[111], L[124], L[132]], words4) 
/\ table([L[160], L[174], L[187]], words3) 
/\ table([L[10], L[24], L[39], L[53], L[66]], words5) 
/\ table([L[86], L[99], L[112], L[125]], words4) 
/\ table([L[146], L[161], L[175], L[188]], words4) 
/\ table([L[11], L[25], L[40], L[54]], words4) 
/\ table([L[74], L[87], L[100], L[113]], words4) 
/\ table([L[133], L[147], L[162], L[176], L[189]], words5) 
/\ table([L[12], L[26], L[41], L[55]], words4) 
/\ table([L[75], L[88], L[101], L[114]], words4) 
/\ table([L[134], L[148], L[163], L[177], L[190]], words5) 
/\ table([L[13], L[27], L[42], L[56]], words4) 
/\ table([L[76], L[89], L[102], L[115]], words4) 
/\ table([L[135], L[149], L[164], L[178], L[191]], words5)
;

% The segments (words)
% (0 for fill outs)
int: max_length = 15;
int: num_segments = 80;
array[1..num_segments, 1..max_length] of int: segments = array2d(1..num_segments, 1..max_length, 
[
1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,
6,7,8,9,0,0,0,0,0,0,0,0,0,0,0,
10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,
14,15,16,17,18,19,20,21,22,23,0,0,0,0,0,
24,25,26,27,0,0,0,0,0,0,0,0,0,0,0,
28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,
43,44,45,46,0,0,0,0,0,0,0,0,0,0,0,
47,48,49,50,51,52,53,54,55,56,0,0,0,0,0,
57,58,59,0,0,0,0,0,0,0,0,0,0,0,0,
60,61,62,63,0,0,0,0,0,0,0,0,0,0,0,
64,65,66,0,0,0,0,0,0,0,0,0,0,0,0,
67,68,69,70,0,0,0,0,0,0,0,0,0,0,0,
71,72,73,0,0,0,0,0,0,0,0,0,0,0,0,
74,75,76,0,0,0,0,0,0,0,0,0,0,0,0,
77,78,79,80,81,82,0,0,0,0,0,0,0,0,0,
83,84,85,0,0,0,0,0,0,0,0,0,0,0,0,
86,87,88,89,0,0,0,0,0,0,0,0,0,0,0,
90,91,92,93,94,0,0,0,0,0,0,0,0,0,0,
95,96,97,0,0,0,0,0,0,0,0,0,0,0,0,
98,99,100,101,102,0,0,0,0,0,0,0,0,0,0,
103,104,105,106,0,0,0,0,0,0,0,0,0,0,0,
107,108,109,0,0,0,0,0,0,0,0,0,0,0,0,
110,111,112,113,114,115,0,0,0,0,0,0,0,0,0,
116,117,118,0,0,0,0,0,0,0,0,0,0,0,0,
119,120,121,0,0,0,0,0,0,0,0,0,0,0,0,
122,123,124,125,0,0,0,0,0,0,0,0,0,0,0,
126,127,128,0,0,0,0,0,0,0,0,0,0,0,0,
129,130,131,132,0,0,0,0,0,0,0,0,0,0,0,
133,134,135,0,0,0,0,0,0,0,0,0,0,0,0,
136,137,138,139,140,141,142,143,144,145,0,0,0,0,0,
146,147,148,149,0,0,0,0,0,0,0,0,0,0,0,
150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,
165,166,167,168,0,0,0,0,0,0,0,0,0,0,0,
169,170,171,172,173,174,175,176,177,178,0,0,0,0,0,
179,180,181,182,0,0,0,0,0,0,0,0,0,0,0,
183,184,185,186,0,0,0,0,0,0,0,0,0,0,0,
187,188,189,190,191,0,0,0,0,0,0,0,0,0,0,
1,14,28,43,57,0,0,0,0,0,0,0,0,0,0,
77,90,103,116,0,0,0,0,0,0,0,0,0,0,0,
136,150,165,179,0,0,0,0,0,0,0,0,0,0,0,
2,15,29,44,58,0,0,0,0,0,0,0,0,0,0,
78,91,104,117,0,0,0,0,0,0,0,0,0,0,0,
137,151,166,180,0,0,0,0,0,0,0,0,0,0,0,
3,16,30,45,59,0,0,0,0,0,0,0,0,0,0,
79,92,105,118,0,0,0,0,0,0,0,0,0,0,0,
138,152,167,181,0,0,0,0,0,0,0,0,0,0,0,
4,17,31,46,0,0,0,0,0,0,0,0,0,0,0,
67,80,93,106,0,0,0,0,0,0,0,0,0,0,0,
126,139,153,168,182,0,0,0,0,0,0,0,0,0,0,
5,18,32,0,0,0,0,0,0,0,0,0,0,0,0,
60,68,81,94,0,0,0,0,0,0,0,0,0,0,0,
119,127,140,154,0,0,0,0,0,0,0,0,0,0,0,
19,33,47,61,69,82,0,0,0,0,0,0,0,0,0,
107,120,128,141,155,169,183,0,0,0,0,0,0,0,0,
6,20,34,48,62,70,0,0,0,0,0,0,0,0,0,
95,108,121,0,0,0,0,0,0,0,0,0,0,0,0,
142,156,170,184,0,0,0,0,0,0,0,0,0,0,0,
7,21,35,49,63,0,0,0,0,0,0,0,0,0,0,
83,96,109,0,0,0,0,0,0,0,0,0,0,0,0,
129,143,157,171,185,0,0,0,0,0,0,0,0,0,0,
8,22,36,50,0,0,0,0,0,0,0,0,0,0,0,
71,84,97,0,0,0,0,0,0,0,0,0,0,0,0,
122,130,144,158,172,186,0,0,0,0,0,0,0,0,0,
9,23,37,51,64,72,85,0,0,0,0,0,0,0,0,
110,123,131,145,159,173,0,0,0,0,0,0,0,0,0,
38,52,65,73,0,0,0,0,0,0,0,0,0,0,0,
98,111,124,132,0,0,0,0,0,0,0,0,0,0,0,
160,174,187,0,0,0,0,0,0,0,0,0,0,0,0,
10,24,39,53,66,0,0,0,0,0,0,0,0,0,0,
86,99,112,125,0,0,0,0,0,0,0,0,0,0,0,
146,161,175,188,0,0,0,0,0,0,0,0,0,0,0,
11,25,40,54,0,0,0,0,0,0,0,0,0,0,0,
74,87,100,113,0,0,0,0,0,0,0,0,0,0,0,
133,147,162,176,189,0,0,0,0,0,0,0,0,0,0,
12,26,41,55,0,0,0,0,0,0,0,0,0,0,0,
75,88,101,114,0,0,0,0,0,0,0,0,0,0,0,
134,148,163,177,190,0,0,0,0,0,0,0,0,0,0,
13,27,42,56,0,0,0,0,0,0,0,0,0,0,0,
76,89,102,115,0,0,0,0,0,0,0,0,0,0,0,
135,149,164,178,191,0,0,0,0,0,0,0,0,0,0,

]);

% Problem where each cell is assigned a unique index.
% (0 means blocked cell)
int: rows = 15;
int: cols = 15;
array[1..rows, 1..cols] of int: problem = array2d(1..rows, 1..cols,
[
1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 0, 10, 11, 12, 13, 
14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 
28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
43, 44, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 
57, 58, 59, 0, 60, 61, 62, 63, 0, 64, 65, 66, 0, 0, 0, 
0, 0, 0, 67, 68, 69, 70, 0, 71, 72, 73, 0, 74, 75, 76, 
77, 78, 79, 80, 81, 82, 0, 83, 84, 85, 0, 86, 87, 88, 89, 
90, 91, 92, 93, 94, 0, 95, 96, 97, 0, 98, 99, 100, 101, 102, 
103, 104, 105, 106, 0, 107, 108, 109, 0, 110, 111, 112, 113, 114, 115, 
116, 117, 118, 0, 119, 120, 121, 0, 122, 123, 124, 125, 0, 0, 0, 
0, 0, 0, 126, 127, 128, 0, 129, 130, 131, 132, 0, 133, 134, 135, 
136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 0, 146, 147, 148, 149, 
150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
165, 166, 167, 168, 0, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 
179, 180, 181, 182, 0, 183, 184, 185, 186, 0, 187, 188, 189, 190, 191, 

]);


